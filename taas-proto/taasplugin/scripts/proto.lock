{
  "definitions": [
    {
      "protopath": "autoid.proto",
      "def": {
        "messages": [
          {
            "name": "AutoIDRequest",
            "fields": [
              {
                "id": 1,
                "name": "dbID",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "tblID",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "isUnsigned",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "n",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "increment",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "offset",
                "type": "int64"
              }
            ]
          },
          {
            "name": "AutoIDResponse",
            "fields": [
              {
                "id": 1,
                "name": "min",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "max",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "errmsg",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RebaseRequest",
            "fields": [
              {
                "id": 1,
                "name": "dbID",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "tblID",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "isUnsigned",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "base",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RebaseResponse",
            "fields": [
              {
                "id": 1,
                "name": "errmsg",
                "type": "bytes"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AutoIDAlloc",
            "rpcs": [
              {
                "name": "AllocAutoID",
                "in_type": "AutoIDRequest",
                "out_type": "AutoIDResponse"
              },
              {
                "name": "Rebase",
                "in_type": "RebaseRequest",
                "out_type": "RebaseResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "autoid"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "brpb.proto",
      "def": {
        "enums": [
          {
            "name": "CompressionType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "LZ4",
                "integer": 1
              },
              {
                "name": "SNAPPY",
                "integer": 2
              },
              {
                "name": "ZSTD",
                "integer": 3
              }
            ]
          },
          {
            "name": "MetaVersion",
            "enum_fields": [
              {
                "name": "V1"
              },
              {
                "name": "V2",
                "integer": 1
              }
            ]
          },
          {
            "name": "FileType",
            "enum_fields": [
              {
                "name": "Delete"
              },
              {
                "name": "Put",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "BackupMeta",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "cluster_version",
                "type": "string"
              },
              {
                "id": 11,
                "name": "br_version",
                "type": "string"
              },
              {
                "id": 12,
                "name": "version",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "files",
                "type": "File",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "file_index",
                "type": "MetaFile"
              },
              {
                "id": 5,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "end_version",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "schemas",
                "type": "Schema",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "schema_index",
                "type": "MetaFile"
              },
              {
                "id": 8,
                "name": "is_raw_kv",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "raw_ranges",
                "type": "RawRange",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "raw_range_index",
                "type": "MetaFile"
              },
              {
                "id": 10,
                "name": "ddls",
                "type": "bytes"
              },
              {
                "id": 16,
                "name": "ddl_indexes",
                "type": "MetaFile"
              },
              {
                "id": 17,
                "name": "backup_result",
                "type": "string"
              },
              {
                "id": 18,
                "name": "api_version",
                "type": "kvrpcpb.APIVersion"
              },
              {
                "id": 19,
                "name": "policies",
                "type": "PlacementPolicy",
                "is_repeated": true
              },
              {
                "id": 20,
                "name": "new_collations_enabled",
                "type": "string"
              }
            ],
            "reserved_ids": [
              3
            ],
            "reserved_names": [
              "path"
            ]
          },
          {
            "name": "File",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "sha256",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "end_version",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "crc64xor",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "total_kvs",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "total_bytes",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 11,
                "name": "size",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "cipher_iv",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "MetaFile",
            "fields": [
              {
                "id": 1,
                "name": "meta_files",
                "type": "File",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "data_files",
                "type": "File",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "schemas",
                "type": "Schema",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "raw_ranges",
                "type": "RawRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "ddls",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PlacementPolicy",
            "fields": [
              {
                "id": 1,
                "name": "info",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Schema",
            "fields": [
              {
                "id": 1,
                "name": "db",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "table",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "crc64xor",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "total_kvs",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "total_bytes",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "tiflash_replicas",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "stats",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RawRange",
            "fields": [
              {
                "id": 1,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterIDError",
            "fields": [
              {
                "id": 1,
                "name": "current",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "request",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "msg",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id_error",
                "type": "ClusterIDError"
              },
              {
                "id": 4,
                "name": "kv_error",
                "type": "kvrpcpb.KeyError"
              },
              {
                "id": 5,
                "name": "region_error",
                "type": "errorpb.Error"
              }
            ]
          },
          {
            "name": "CipherInfo",
            "fields": [
              {
                "id": 1,
                "name": "cipher_type",
                "type": "encryptionpb.EncryptionMethod"
              },
              {
                "id": 2,
                "name": "cipher_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "BackupRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "end_version",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "rate_limit",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "concurrency",
                "type": "uint32"
              },
              {
                "id": 9,
                "name": "storage_backend",
                "type": "StorageBackend"
              },
              {
                "id": 10,
                "name": "is_raw_kv",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 12,
                "name": "compression_type",
                "type": "CompressionType"
              },
              {
                "id": 13,
                "name": "compression_level",
                "type": "int32"
              },
              {
                "id": 14,
                "name": "cipher_info",
                "type": "CipherInfo"
              },
              {
                "id": 15,
                "name": "dst_api_version",
                "type": "kvrpcpb.APIVersion"
              },
              {
                "id": 16,
                "name": "sub_ranges",
                "type": "kvrpcpb.KeyRange",
                "is_repeated": true
              },
              {
                "id": 17,
                "name": "replica_read",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              6
            ],
            "reserved_names": [
              "path"
            ]
          },
          {
            "name": "StreamBackupTaskInfo",
            "fields": [
              {
                "id": 1,
                "name": "storage",
                "type": "StorageBackend"
              },
              {
                "id": 2,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "end_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "table_filter",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "compression_type",
                "type": "CompressionType"
              }
            ],
            "reserved_names": [
              "last_update_ts",
              "ranges",
              "status"
            ]
          },
          {
            "name": "StorageBackend",
            "fields": [
              {
                "id": 1,
                "name": "noop",
                "type": "Noop"
              },
              {
                "id": 2,
                "name": "local",
                "type": "Local"
              },
              {
                "id": 3,
                "name": "s3",
                "type": "S3"
              },
              {
                "id": 4,
                "name": "gcs",
                "type": "GCS"
              },
              {
                "id": 5,
                "name": "cloud_dynamic",
                "type": "CloudDynamic"
              },
              {
                "id": 6,
                "name": "hdfs",
                "type": "HDFS"
              },
              {
                "id": 7,
                "name": "azure_blob_storage",
                "type": "AzureBlobStorage"
              }
            ]
          },
          {
            "name": "Noop"
          },
          {
            "name": "Local",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "S3",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "region",
                "type": "string"
              },
              {
                "id": 3,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 4,
                "name": "prefix",
                "type": "string"
              },
              {
                "id": 5,
                "name": "storage_class",
                "type": "string"
              },
              {
                "id": 6,
                "name": "sse",
                "type": "string"
              },
              {
                "id": 7,
                "name": "acl",
                "type": "string"
              },
              {
                "id": 8,
                "name": "access_key",
                "type": "string"
              },
              {
                "id": 9,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 10,
                "name": "force_path_style",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "sse_kms_key_id",
                "type": "string"
              },
              {
                "id": 12,
                "name": "role_arn",
                "type": "string"
              },
              {
                "id": 13,
                "name": "external_id",
                "type": "string"
              },
              {
                "id": 14,
                "name": "object_lock_enabled",
                "type": "bool"
              },
              {
                "id": 15,
                "name": "session_token",
                "type": "string"
              },
              {
                "id": 16,
                "name": "provider",
                "type": "string"
              }
            ]
          },
          {
            "name": "GCS",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 3,
                "name": "prefix",
                "type": "string"
              },
              {
                "id": 4,
                "name": "storage_class",
                "type": "string"
              },
              {
                "id": 5,
                "name": "predefined_acl",
                "type": "string"
              },
              {
                "id": 6,
                "name": "credentials_blob",
                "type": "string"
              }
            ]
          },
          {
            "name": "AzureBlobStorage",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 3,
                "name": "prefix",
                "type": "string"
              },
              {
                "id": 4,
                "name": "storage_class",
                "type": "string"
              },
              {
                "id": 5,
                "name": "account_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "shared_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "Bucket",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "region",
                "type": "string"
              },
              {
                "id": 4,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 5,
                "name": "prefix",
                "type": "string"
              },
              {
                "id": 6,
                "name": "storage_class",
                "type": "string"
              }
            ]
          },
          {
            "name": "CloudDynamic",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "Bucket"
              },
              {
                "id": 2,
                "name": "provider_name",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "attrs",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "HDFS",
            "fields": [
              {
                "id": 1,
                "name": "remote",
                "type": "string"
              }
            ]
          },
          {
            "name": "BackupResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "files",
                "type": "File",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "api_version",
                "type": "kvrpcpb.APIVersion"
              }
            ]
          },
          {
            "name": "CheckAdminRequest"
          },
          {
            "name": "CheckAdminResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 3,
                "name": "has_pending_admin",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExternalStorageRestoreRequest",
            "fields": [
              {
                "id": 1,
                "name": "storage_backend",
                "type": "StorageBackend"
              },
              {
                "id": 2,
                "name": "object_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "restore_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "content_length",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ExternalStorageRestoreResponse"
          },
          {
            "name": "ExternalStorageSaveRequest",
            "fields": [
              {
                "id": 1,
                "name": "storage_backend",
                "type": "StorageBackend"
              },
              {
                "id": 2,
                "name": "object_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "content_length",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ExternalStorageSaveResponse"
          },
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "DataFileInfo",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "file_groups",
                "type": "DataFileGroup",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "store_id",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "resolved_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "max_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "min_ts",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "meta_version",
                "type": "MetaVersion"
              }
            ]
          },
          {
            "name": "DataFileGroup",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data_files_info",
                "type": "DataFileInfo",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "min_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "max_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "min_resolved_ts",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "length",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "DataFileInfo",
            "fields": [
              {
                "id": 1,
                "name": "sha256",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "number_of_entries",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "min_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "max_ts",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "resolved_ts",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "region_id",
                "type": "int64"
              },
              {
                "id": 8,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 9,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 10,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 11,
                "name": "type",
                "type": "FileType"
              },
              {
                "id": 12,
                "name": "is_meta",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "table_id",
                "type": "int64"
              },
              {
                "id": 14,
                "name": "length",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "min_begin_ts_in_default_cf",
                "type": "uint64"
              },
              {
                "id": 16,
                "name": "range_offset",
                "type": "uint64"
              },
              {
                "id": 17,
                "name": "range_length",
                "type": "uint64"
              },
              {
                "id": 18,
                "name": "compression_type",
                "type": "CompressionType"
              }
            ],
            "reserved_names": [
              "iv"
            ]
          },
          {
            "name": "StreamBackupError",
            "fields": [
              {
                "id": 1,
                "name": "happen_at",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "error_code",
                "type": "string"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 4,
                "name": "store_id",
                "type": "uint64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Backup",
            "rpcs": [
              {
                "name": "backup",
                "in_type": "BackupRequest",
                "out_type": "BackupResponse",
                "out_streamed": true
              },
              {
                "name": "CheckPendingAdminOp",
                "in_type": "CheckAdminRequest",
                "out_type": "CheckAdminResponse",
                "out_streamed": true
              }
            ]
          },
          {
            "name": "ExternalStorage",
            "rpcs": [
              {
                "name": "restore",
                "in_type": "ExternalStorageRestoreRequest",
                "out_type": "ExternalStorageRestoreResponse"
              },
              {
                "name": "save",
                "in_type": "ExternalStorageSaveRequest",
                "out_type": "ExternalStorageSaveResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "errorpb.proto"
          },
          {
            "path": "metapb.proto"
          },
          {
            "path": "encryptionpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "backup"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "cdcpb.proto",
      "def": {
        "enums": [
          {
            "name": "Event.LogType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PREWRITE",
                "integer": 1
              },
              {
                "name": "COMMIT",
                "integer": 2
              },
              {
                "name": "ROLLBACK",
                "integer": 3
              },
              {
                "name": "COMMITTED",
                "integer": 4
              },
              {
                "name": "INITIALIZED",
                "integer": 5
              }
            ]
          },
          {
            "name": "Row.OpType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PUT",
                "integer": 1
              },
              {
                "name": "DELETE",
                "integer": 2
              }
            ]
          },
          {
            "name": "ChangeDataRequest.KvAPI",
            "enum_fields": [
              {
                "name": "TiDB"
              },
              {
                "name": "RawKV",
                "integer": 1
              },
              {
                "name": "TxnKV",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Header",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "ticdc_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DuplicateRequest",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Compatibility",
            "fields": [
              {
                "id": 1,
                "name": "required_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterIDMismatch",
            "fields": [
              {
                "id": 1,
                "name": "current",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "request",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "not_leader",
                "type": "errorpb.NotLeader"
              },
              {
                "id": 2,
                "name": "region_not_found",
                "type": "errorpb.RegionNotFound"
              },
              {
                "id": 3,
                "name": "epoch_not_match",
                "type": "errorpb.EpochNotMatch"
              },
              {
                "id": 4,
                "name": "duplicate_request",
                "type": "DuplicateRequest"
              },
              {
                "id": 5,
                "name": "compatibility",
                "type": "Compatibility"
              },
              {
                "id": 6,
                "name": "cluster_id_mismatch",
                "type": "ClusterIDMismatch"
              }
            ]
          },
          {
            "name": "TxnInfo",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "primary",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TxnStatus",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "min_commit_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "commit_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "is_rolled_back",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Event",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "index",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "request_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "entries",
                "type": "Entries"
              },
              {
                "id": 4,
                "name": "admin",
                "type": "Admin"
              },
              {
                "id": 5,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 6,
                "name": "resolved_ts",
                "type": "uint64",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 8,
                "name": "long_txn",
                "type": "LongTxn"
              }
            ],
            "messages": [
              {
                "name": "Row",
                "fields": [
                  {
                    "id": 1,
                    "name": "start_ts",
                    "type": "uint64"
                  },
                  {
                    "id": 2,
                    "name": "commit_ts",
                    "type": "uint64"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "LogType"
                  },
                  {
                    "id": 4,
                    "name": "op_type",
                    "type": "OpType"
                  },
                  {
                    "id": 5,
                    "name": "key",
                    "type": "bytes"
                  },
                  {
                    "id": 6,
                    "name": "value",
                    "type": "bytes"
                  },
                  {
                    "id": 7,
                    "name": "old_value",
                    "type": "bytes"
                  },
                  {
                    "id": 8,
                    "name": "expire_ts_unix_secs",
                    "type": "uint64"
                  },
                  {
                    "id": 9,
                    "name": "txn_source",
                    "type": "uint64"
                  }
                ]
              },
              {
                "name": "Entries",
                "fields": [
                  {
                    "id": 1,
                    "name": "entries",
                    "type": "Row",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Admin",
                "fields": [
                  {
                    "id": 1,
                    "name": "admin_request",
                    "type": "raft_cmdpb.AdminRequest"
                  },
                  {
                    "id": 2,
                    "name": "admin_response",
                    "type": "raft_cmdpb.AdminResponse"
                  }
                ]
              },
              {
                "name": "LongTxn",
                "fields": [
                  {
                    "id": 1,
                    "name": "txn_info",
                    "type": "TxnInfo",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ChangeDataEvent",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "Event",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "resolved_ts",
                "type": "ResolvedTs"
              }
            ]
          },
          {
            "name": "ResolvedTs",
            "fields": [
              {
                "id": 1,
                "name": "regions",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ChangeDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 4,
                "name": "checkpoint_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 7,
                "name": "request_id",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "extra_op",
                "type": "kvrpcpb.ExtraOp"
              },
              {
                "id": 9,
                "name": "register",
                "type": "Register"
              },
              {
                "id": 10,
                "name": "notify_txn_status",
                "type": "NotifyTxnStatus"
              },
              {
                "id": 11,
                "name": "kv_api",
                "type": "KvAPI"
              },
              {
                "id": 12,
                "name": "filter_loop",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "Register"
              },
              {
                "name": "NotifyTxnStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "txn_status",
                    "type": "TxnStatus",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ChangeData",
            "rpcs": [
              {
                "name": "EventFeed",
                "in_type": "ChangeDataRequest",
                "out_type": "ChangeDataEvent",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "raft_cmdpb.proto"
          },
          {
            "path": "metapb.proto"
          },
          {
            "path": "errorpb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "cdcpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "configpb.proto",
      "def": {
        "enums": [
          {
            "name": "StatusCode",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "OK",
                "integer": 1
              },
              {
                "name": "WRONG_VERSION",
                "integer": 2
              },
              {
                "name": "NOT_CHANGE",
                "integer": 3
              },
              {
                "name": "COMPONENT_NOT_FOUND",
                "integer": 4
              },
              {
                "name": "COMPONENT_ID_NOT_FOUND",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Status",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "StatusCode"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "local",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "global",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Local",
            "fields": [
              {
                "id": 1,
                "name": "component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "Global",
            "fields": [
              {
                "id": 1,
                "name": "component",
                "type": "string"
              }
            ]
          },
          {
            "name": "ConfigKind",
            "fields": [
              {
                "id": 1,
                "name": "local",
                "type": "Local"
              },
              {
                "id": 2,
                "name": "global",
                "type": "Global"
              }
            ]
          },
          {
            "name": "ConfigEntry",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "LocalConfig",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 2,
                "name": "component",
                "type": "string"
              },
              {
                "id": 3,
                "name": "component_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "config",
                "type": "string"
              }
            ]
          },
          {
            "name": "Header",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CreateRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 3,
                "name": "component",
                "type": "string"
              },
              {
                "id": 4,
                "name": "component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "config",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreateResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 4,
                "name": "config",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAllRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              }
            ]
          },
          {
            "name": "GetAllResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "local_configs",
                "type": "LocalConfig",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 3,
                "name": "component",
                "type": "string"
              },
              {
                "id": 4,
                "name": "component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 4,
                "name": "config",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpdateRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 3,
                "name": "kind",
                "type": "ConfigKind"
              },
              {
                "id": 4,
                "name": "entries",
                "type": "ConfigEntry",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 4,
                "name": "config",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "version",
                "type": "Version"
              },
              {
                "id": 3,
                "name": "kind",
                "type": "ConfigKind"
              }
            ]
          },
          {
            "name": "DeleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "Header"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "version",
                "type": "Version"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Config",
            "rpcs": [
              {
                "name": "Create",
                "in_type": "CreateRequest",
                "out_type": "CreateResponse"
              },
              {
                "name": "GetAll",
                "in_type": "GetAllRequest",
                "out_type": "GetAllResponse"
              },
              {
                "name": "Get",
                "in_type": "GetRequest",
                "out_type": "GetResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "get",
                        "value": "/component"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Update",
                "in_type": "UpdateRequest",
                "out_type": "UpdateResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/component"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Delete",
                "in_type": "DeleteRequest",
                "out_type": "DeleteResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "delete",
                        "value": "/component"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "configpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "coprocessor.proto",
      "def": {
        "messages": [
          {
            "name": "KeyRange",
            "fields": [
              {
                "id": 1,
                "name": "start",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "end",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Request",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "kvrpcpb.Context"
              },
              {
                "id": 2,
                "name": "tp",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "data",
                "type": "bytes"
              },
              {
                "id": 7,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "ranges",
                "type": "KeyRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "is_cache_enabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "cache_if_match_version",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "schema_ver",
                "type": "int64"
              },
              {
                "id": 9,
                "name": "is_trace_enabled",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "paging_size",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "tasks",
                "type": "StoreBatchTask",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Response",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes",
                "options": [
                  {
                    "name": "(gogoproto.customtype)",
                    "value": "github.com/pingcap/kvproto/pkg/sharedbytes.SharedBytes"
                  },
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 3,
                "name": "locked",
                "type": "kvrpcpb.LockInfo"
              },
              {
                "id": 4,
                "name": "other_error",
                "type": "string"
              },
              {
                "id": 5,
                "name": "range",
                "type": "KeyRange"
              },
              {
                "id": 6,
                "name": "exec_details",
                "type": "kvrpcpb.ExecDetails"
              },
              {
                "id": 11,
                "name": "exec_details_v2",
                "type": "kvrpcpb.ExecDetailsV2"
              },
              {
                "id": 7,
                "name": "is_cache_hit",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "cache_last_version",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "can_be_cached",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "latest_buckets_version",
                "type": "uint64"
              },
              {
                "id": 13,
                "name": "batch_responses",
                "type": "StoreBatchTaskResponse",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              10
            ]
          },
          {
            "name": "RegionInfo",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 3,
                "name": "ranges",
                "type": "KeyRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TableRegions",
            "fields": [
              {
                "id": 1,
                "name": "physical_table_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "regions",
                "type": "RegionInfo",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BatchRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "kvrpcpb.Context"
              },
              {
                "id": 2,
                "name": "tp",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "data",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "regions",
                "type": "RegionInfo",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "schema_ver",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "table_regions",
                "type": "TableRegions",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "log_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "BatchResponse",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes",
                "options": [
                  {
                    "name": "(gogoproto.customtype)",
                    "value": "github.com/pingcap/kvproto/pkg/sharedbytes.SharedBytes"
                  },
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "other_error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "exec_details",
                "type": "kvrpcpb.ExecDetails"
              },
              {
                "id": 4,
                "name": "retry_regions",
                "type": "metapb.Region",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StoreBatchTask",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 3,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 4,
                "name": "ranges",
                "type": "KeyRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "task_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "StoreBatchTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes",
                "options": [
                  {
                    "name": "(gogoproto.customtype)",
                    "value": "github.com/pingcap/kvproto/pkg/sharedbytes.SharedBytes"
                  },
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 3,
                "name": "locked",
                "type": "kvrpcpb.LockInfo"
              },
              {
                "id": 4,
                "name": "other_error",
                "type": "string"
              },
              {
                "id": 5,
                "name": "task_id",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "exec_details_v2",
                "type": "kvrpcpb.ExecDetailsV2"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "errorpb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          },
          {
            "path": "metapb.proto"
          }
        ],
        "package": {
          "name": "coprocessor"
        },
        "options": [
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "deadlock.proto",
      "def": {
        "enums": [
          {
            "name": "DeadlockRequestType",
            "enum_fields": [
              {
                "name": "Detect"
              },
              {
                "name": "CleanUpWaitFor",
                "integer": 1
              },
              {
                "name": "CleanUp",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "WaitForEntriesRequest"
          },
          {
            "name": "WaitForEntriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "entries",
                "type": "WaitForEntry",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              }
            ]
          },
          {
            "name": "WaitForEntry",
            "fields": [
              {
                "id": 1,
                "name": "txn",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "wait_for_txn",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "key_hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "resource_group_tag",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "wait_time",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "DeadlockRequest",
            "fields": [
              {
                "id": 1,
                "name": "tp",
                "type": "DeadlockRequestType"
              },
              {
                "id": 2,
                "name": "entry",
                "type": "WaitForEntry",
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              }
            ]
          },
          {
            "name": "DeadlockResponse",
            "fields": [
              {
                "id": 1,
                "name": "entry",
                "type": "WaitForEntry",
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "deadlock_key_hash",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "wait_chain",
                "type": "WaitForEntry",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Deadlock",
            "rpcs": [
              {
                "name": "GetWaitForEntries",
                "in_type": "WaitForEntriesRequest",
                "out_type": "WaitForEntriesResponse"
              },
              {
                "name": "Detect",
                "in_type": "DeadlockRequest",
                "out_type": "DeadlockResponse",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          }
        ],
        "package": {
          "name": "deadlock"
        }
      }
    },
    {
      "protopath": "debugpb.proto",
      "def": {
        "enums": [
          {
            "name": "DB",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "KV",
                "integer": 1
              },
              {
                "name": "RAFT",
                "integer": 2
              }
            ]
          },
          {
            "name": "MODULE",
            "enum_fields": [
              {
                "name": "UNUSED"
              },
              {
                "name": "KVDB",
                "integer": 1
              },
              {
                "name": "RAFTDB",
                "integer": 2
              },
              {
                "name": "READPOOL",
                "integer": 3
              },
              {
                "name": "SERVER",
                "integer": 4
              },
              {
                "name": "STORAGE",
                "integer": 5
              },
              {
                "name": "PD",
                "integer": 6
              },
              {
                "name": "METRIC",
                "integer": 7
              },
              {
                "name": "COPROCESSOR",
                "integer": 8
              },
              {
                "name": "SECURITY",
                "integer": 9
              },
              {
                "name": "IMPORT",
                "integer": 10
              }
            ]
          },
          {
            "name": "BottommostLevelCompaction",
            "enum_fields": [
              {
                "name": "Skip"
              },
              {
                "name": "Force",
                "integer": 1
              },
              {
                "name": "IfHaveCompactionFilter",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetRequest",
            "fields": [
              {
                "id": 1,
                "name": "db",
                "type": "DB"
              },
              {
                "id": 2,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 3,
                "name": "key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetResponse",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RaftLogRequest",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "log_index",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RaftLogResponse",
            "fields": [
              {
                "id": 1,
                "name": "entry",
                "type": "eraftpb.Entry"
              }
            ]
          },
          {
            "name": "RegionInfoRequest",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "raft_local_state",
                "type": "raft_serverpb.RaftLocalState"
              },
              {
                "id": 2,
                "name": "raft_apply_state",
                "type": "raft_serverpb.RaftApplyState"
              },
              {
                "id": 3,
                "name": "region_local_state",
                "type": "raft_serverpb.RegionLocalState"
              }
            ]
          },
          {
            "name": "RegionSizeRequest",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "cfs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RegionSizeResponse",
            "fields": [
              {
                "id": 1,
                "name": "entries",
                "type": "Entry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Entry",
                "fields": [
                  {
                    "id": 1,
                    "name": "cf",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "size",
                    "type": "uint64"
                  }
                ]
              }
            ]
          },
          {
            "name": "ScanMvccRequest",
            "fields": [
              {
                "id": 1,
                "name": "from_key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "to_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "limit",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ScanMvccResponse",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "info",
                "type": "kvrpcpb.MvccInfo"
              }
            ]
          },
          {
            "name": "CompactRequest",
            "fields": [
              {
                "id": 1,
                "name": "db",
                "type": "DB"
              },
              {
                "id": 2,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 3,
                "name": "from_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "to_key",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "threads",
                "type": "uint32"
              },
              {
                "id": 6,
                "name": "bottommost_level_compaction",
                "type": "BottommostLevelCompaction"
              }
            ]
          },
          {
            "name": "CompactResponse"
          },
          {
            "name": "InjectFailPointRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "actions",
                "type": "string"
              }
            ]
          },
          {
            "name": "InjectFailPointResponse"
          },
          {
            "name": "RecoverFailPointRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "RecoverFailPointResponse"
          },
          {
            "name": "ListFailPointsRequest"
          },
          {
            "name": "ListFailPointsResponse",
            "fields": [
              {
                "id": 1,
                "name": "entries",
                "type": "Entry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Entry",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "actions",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetMetricsRequest",
            "fields": [
              {
                "id": 1,
                "name": "all",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetMetricsResponse",
            "fields": [
              {
                "id": 1,
                "name": "prometheus",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rocksdb_kv",
                "type": "string"
              },
              {
                "id": 3,
                "name": "rocksdb_raft",
                "type": "string"
              },
              {
                "id": 4,
                "name": "jemalloc",
                "type": "string"
              },
              {
                "id": 5,
                "name": "store_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionConsistencyCheckRequest",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionConsistencyCheckResponse"
          },
          {
            "name": "ModifyTikvConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "module",
                "type": "MODULE"
              },
              {
                "id": 2,
                "name": "config_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "config_value",
                "type": "string"
              }
            ]
          },
          {
            "name": "ModifyTikvConfigResponse"
          },
          {
            "name": "Property",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetRegionPropertiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GetRegionPropertiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "Property",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetStoreInfoRequest"
          },
          {
            "name": "GetStoreInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "store_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "api_version",
                "type": "kvrpcpb.APIVersion"
              }
            ]
          },
          {
            "name": "GetClusterInfoRequest"
          },
          {
            "name": "GetClusterInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GetAllRegionsInStoreRequest"
          },
          {
            "name": "GetAllRegionsInStoreResponse",
            "fields": [
              {
                "id": 1,
                "name": "regions",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResetToVersionRequest",
            "fields": [
              {
                "id": 1,
                "name": "ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ResetToVersionResponse"
          }
        ],
        "services": [
          {
            "name": "Debug",
            "rpcs": [
              {
                "name": "Get",
                "in_type": "GetRequest",
                "out_type": "GetResponse"
              },
              {
                "name": "RaftLog",
                "in_type": "RaftLogRequest",
                "out_type": "RaftLogResponse"
              },
              {
                "name": "RegionInfo",
                "in_type": "RegionInfoRequest",
                "out_type": "RegionInfoResponse"
              },
              {
                "name": "RegionSize",
                "in_type": "RegionSizeRequest",
                "out_type": "RegionSizeResponse"
              },
              {
                "name": "ScanMvcc",
                "in_type": "ScanMvccRequest",
                "out_type": "ScanMvccResponse",
                "out_streamed": true
              },
              {
                "name": "Compact",
                "in_type": "CompactRequest",
                "out_type": "CompactResponse"
              },
              {
                "name": "InjectFailPoint",
                "in_type": "InjectFailPointRequest",
                "out_type": "InjectFailPointResponse"
              },
              {
                "name": "RecoverFailPoint",
                "in_type": "RecoverFailPointRequest",
                "out_type": "RecoverFailPointResponse"
              },
              {
                "name": "ListFailPoints",
                "in_type": "ListFailPointsRequest",
                "out_type": "ListFailPointsResponse"
              },
              {
                "name": "GetMetrics",
                "in_type": "GetMetricsRequest",
                "out_type": "GetMetricsResponse"
              },
              {
                "name": "CheckRegionConsistency",
                "in_type": "RegionConsistencyCheckRequest",
                "out_type": "RegionConsistencyCheckResponse"
              },
              {
                "name": "ModifyTikvConfig",
                "in_type": "ModifyTikvConfigRequest",
                "out_type": "ModifyTikvConfigResponse"
              },
              {
                "name": "GetRegionProperties",
                "in_type": "GetRegionPropertiesRequest",
                "out_type": "GetRegionPropertiesResponse"
              },
              {
                "name": "GetStoreInfo",
                "in_type": "GetStoreInfoRequest",
                "out_type": "GetStoreInfoResponse"
              },
              {
                "name": "GetClusterInfo",
                "in_type": "GetClusterInfoRequest",
                "out_type": "GetClusterInfoResponse"
              },
              {
                "name": "GetAllRegionsInStore",
                "in_type": "GetAllRegionsInStoreRequest",
                "out_type": "GetAllRegionsInStoreResponse"
              },
              {
                "name": "ResetToVersion",
                "in_type": "ResetToVersionRequest",
                "out_type": "ResetToVersionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "eraftpb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "raft_serverpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "debugpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "diagnosticspb.proto",
      "def": {
        "enums": [
          {
            "name": "LogLevel",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "Debug",
                "integer": 1
              },
              {
                "name": "Info",
                "integer": 2
              },
              {
                "name": "Warn",
                "integer": 3
              },
              {
                "name": "Trace",
                "integer": 4
              },
              {
                "name": "Critical",
                "integer": 5
              },
              {
                "name": "Error",
                "integer": 6
              }
            ]
          },
          {
            "name": "SearchLogRequest.Target",
            "enum_fields": [
              {
                "name": "Normal"
              },
              {
                "name": "Slow",
                "integer": 1
              }
            ]
          },
          {
            "name": "ServerInfoType",
            "enum_fields": [
              {
                "name": "All"
              },
              {
                "name": "HardwareInfo",
                "integer": 1
              },
              {
                "name": "SystemInfo",
                "integer": 2
              },
              {
                "name": "LoadInfo",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SearchLogRequest",
            "fields": [
              {
                "id": 1,
                "name": "start_time",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "end_time",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "levels",
                "type": "LogLevel",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "patterns",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "target",
                "type": "Target"
              }
            ]
          },
          {
            "name": "SearchLogResponse",
            "fields": [
              {
                "id": 1,
                "name": "messages",
                "type": "LogMessage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LogMessage",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "level",
                "type": "LogLevel"
              },
              {
                "id": 3,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "ServerInfoRequest",
            "fields": [
              {
                "id": 1,
                "name": "tp",
                "type": "ServerInfoType"
              }
            ]
          },
          {
            "name": "ServerInfoPair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "ServerInfoItem",
            "fields": [
              {
                "id": 1,
                "name": "tp",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pairs",
                "type": "ServerInfoPair",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServerInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "ServerInfoItem",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Diagnostics",
            "rpcs": [
              {
                "name": "search_log",
                "in_type": "SearchLogRequest",
                "out_type": "SearchLogResponse",
                "out_streamed": true
              },
              {
                "name": "server_info",
                "in_type": "ServerInfoRequest",
                "out_type": "ServerInfoResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "diagnosticspb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "disaggregated.proto",
      "def": {
        "messages": [
          {
            "name": "S3LockResult",
            "fields": [
              {
                "id": 1,
                "name": "success",
                "type": "Success"
              },
              {
                "id": 2,
                "name": "not_owner",
                "type": "NotOwner"
              },
              {
                "id": 3,
                "name": "conflict",
                "type": "Conflict"
              }
            ]
          },
          {
            "name": "Success"
          },
          {
            "name": "NotOwner"
          },
          {
            "name": "Conflict",
            "fields": [
              {
                "id": 1,
                "name": "reason",
                "type": "string"
              }
            ]
          },
          {
            "name": "TryAddLockRequest",
            "fields": [
              {
                "id": 1,
                "name": "data_file_key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "lock_store_id",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "lock_seq",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TryAddLockResponse",
            "fields": [
              {
                "id": 1,
                "name": "result",
                "type": "S3LockResult"
              }
            ]
          },
          {
            "name": "TryMarkDeleteRequest",
            "fields": [
              {
                "id": 1,
                "name": "data_file_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "TryMarkDeleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "result",
                "type": "S3LockResult"
              }
            ]
          },
          {
            "name": "GetDisaggConfigRequest"
          },
          {
            "name": "DisaggS3Config",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "root",
                "type": "string"
              },
              {
                "id": 3,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetDisaggConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "s3_config",
                "type": "DisaggS3Config"
              }
            ]
          },
          {
            "name": "DisaggTaskMeta",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "query_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "server_id",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "local_query_id",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "task_id",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "executor_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "keyspace_id",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "api_version",
                "type": "kvrpcpb.APIVersion"
              }
            ]
          },
          {
            "name": "DisaggReadError",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "msg",
                "type": "string"
              }
            ]
          },
          {
            "name": "EstablishDisaggTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "DisaggTaskMeta"
              },
              {
                "id": 2,
                "name": "address",
                "type": "string"
              },
              {
                "id": 3,
                "name": "timeout_s",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "regions",
                "type": "coprocessor.RegionInfo",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "schema_ver",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "table_regions",
                "type": "coprocessor.TableRegions",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "encoded_plan",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "EstablishDisaggTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "DisaggReadError"
              },
              {
                "id": 2,
                "name": "retry_regions",
                "type": "metapb.Region",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "store_id",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "snapshot_id",
                "type": "DisaggTaskMeta"
              },
              {
                "id": 5,
                "name": "tables",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FetchDisaggPagesRequest",
            "fields": [
              {
                "id": 1,
                "name": "snapshot_id",
                "type": "DisaggTaskMeta"
              },
              {
                "id": 2,
                "name": "table_id",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "segment_id",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "page_ids",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PagesPacket",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "DisaggReadError"
              },
              {
                "id": 2,
                "name": "pages",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "chunks",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "summaries",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "coprocessor.proto"
          },
          {
            "path": "metapb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          }
        ],
        "package": {
          "name": "disaggregated"
        },
        "options": [
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "disk_usage.proto",
      "def": {
        "enums": [
          {
            "name": "DiskUsage",
            "enum_fields": [
              {
                "name": "Normal"
              },
              {
                "name": "AlmostFull",
                "integer": 1
              },
              {
                "name": "AlreadyFull",
                "integer": 2
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "disk_usage"
        },
        "options": [
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "encryptionpb.proto",
      "def": {
        "enums": [
          {
            "name": "EncryptionMethod",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PLAINTEXT",
                "integer": 1
              },
              {
                "name": "AES128_CTR",
                "integer": 2
              },
              {
                "name": "AES192_CTR",
                "integer": 3
              },
              {
                "name": "AES256_CTR",
                "integer": 4
              },
              {
                "name": "SM4_CTR",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "EncryptionMeta",
            "fields": [
              {
                "id": 1,
                "name": "key_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "iv",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "FileInfo",
            "fields": [
              {
                "id": 1,
                "name": "key_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "iv",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "method",
                "type": "EncryptionMethod"
              }
            ]
          },
          {
            "name": "FileDictionary",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "files",
                  "type": "FileInfo"
                }
              }
            ]
          },
          {
            "name": "DataKey",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "method",
                "type": "EncryptionMethod"
              },
              {
                "id": 3,
                "name": "creation_time",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "was_exposed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "KeyDictionary",
            "fields": [
              {
                "id": 2,
                "name": "current_key_id",
                "type": "uint64"
              }
            ],
            "maps": [
              {
                "key_type": "uint64",
                "field": {
                  "id": 1,
                  "name": "keys",
                  "type": "DataKey"
                }
              }
            ]
          },
          {
            "name": "MasterKey",
            "fields": [
              {
                "id": 1,
                "name": "plaintext",
                "type": "MasterKeyPlaintext"
              },
              {
                "id": 2,
                "name": "file",
                "type": "MasterKeyFile"
              },
              {
                "id": 3,
                "name": "kms",
                "type": "MasterKeyKms"
              }
            ]
          },
          {
            "name": "MasterKeyPlaintext"
          },
          {
            "name": "MasterKeyFile",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "MasterKeyKms",
            "fields": [
              {
                "id": 1,
                "name": "vendor",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "region",
                "type": "string"
              },
              {
                "id": 4,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "EncryptedContent",
            "fields": [
              {
                "id": 2,
                "name": "content",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "master_key",
                "type": "MasterKey"
              },
              {
                "id": 4,
                "name": "iv",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "ciphertext_key",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "metadata",
                  "type": "bytes"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "encryptionpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "enginepb.proto",
      "def": {
        "messages": [
          {
            "name": "CommandRequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "index",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "term",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "sync_log",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "destroy",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "context",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "CommandRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "CommandRequestHeader"
              },
              {
                "id": 2,
                "name": "requests",
                "type": "raft_cmdpb.Request",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "admin_request",
                "type": "raft_cmdpb.AdminRequest"
              },
              {
                "id": 4,
                "name": "admin_response",
                "type": "raft_cmdpb.AdminResponse"
              }
            ]
          },
          {
            "name": "CommandRequestBatch",
            "fields": [
              {
                "id": 1,
                "name": "requests",
                "type": "CommandRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CommandResponseHeader",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "destroyed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CommandResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "CommandResponseHeader"
              },
              {
                "id": 2,
                "name": "apply_state",
                "type": "raft_serverpb.RaftApplyState"
              },
              {
                "id": 3,
                "name": "applied_term",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CommandResponseBatch",
            "fields": [
              {
                "id": 1,
                "name": "responses",
                "type": "CommandResponse",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SnapshotState",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 2,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 3,
                "name": "apply_state",
                "type": "raft_serverpb.RaftApplyState"
              }
            ]
          },
          {
            "name": "SnapshotData",
            "fields": [
              {
                "id": 1,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 2,
                "name": "checksum",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "data",
                "type": "raft_serverpb.KeyValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SnapshotRequest",
            "fields": [
              {
                "id": 1,
                "name": "state",
                "type": "SnapshotState"
              },
              {
                "id": 2,
                "name": "data",
                "type": "SnapshotData"
              }
            ]
          },
          {
            "name": "SnapshotDone"
          }
        ],
        "services": [
          {
            "name": "Engine",
            "rpcs": [
              {
                "name": "ApplyCommandBatch",
                "in_type": "CommandRequestBatch",
                "out_type": "CommandResponseBatch",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "ApplySnapshot",
                "in_type": "SnapshotRequest",
                "out_type": "SnapshotDone",
                "in_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "metapb.proto"
          },
          {
            "path": "raft_cmdpb.proto"
          },
          {
            "path": "raft_serverpb.proto"
          }
        ],
        "package": {
          "name": "enginepb"
        }
      }
    },
    {
      "protopath": "errorpb.proto",
      "def": {
        "messages": [
          {
            "name": "NotLeader",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "leader",
                "type": "metapb.Peer"
              }
            ]
          },
          {
            "name": "IsWitness",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "DiskFull",
            "fields": [
              {
                "id": 1,
                "name": "store_id",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "reason",
                "type": "string"
              }
            ]
          },
          {
            "name": "StoreNotMatch",
            "fields": [
              {
                "id": 1,
                "name": "request_store_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "actual_store_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionNotFound",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionNotInitialized",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "KeyNotInRegion",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "end_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "EpochNotMatch",
            "fields": [
              {
                "id": 1,
                "name": "current_regions",
                "type": "metapb.Region",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServerIsBusy",
            "fields": [
              {
                "id": 1,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 2,
                "name": "backoff_ms",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "estimated_wait_ms",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "applied_index",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "StaleCommand"
          },
          {
            "name": "RaftEntryTooLarge",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "entry_size",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "MaxTimestampNotSynced"
          },
          {
            "name": "ReadIndexNotReady",
            "fields": [
              {
                "id": 1,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 2,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ProposalInMergingMode",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "DataIsNotReady",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "peer_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "safe_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RecoveryInProgress",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "FlashbackInProgress",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "flashback_start_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "FlashbackNotPrepared",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              },
              {
                "id": 2,
                "name": "not_leader",
                "type": "NotLeader"
              },
              {
                "id": 3,
                "name": "region_not_found",
                "type": "RegionNotFound"
              },
              {
                "id": 4,
                "name": "key_not_in_region",
                "type": "KeyNotInRegion"
              },
              {
                "id": 5,
                "name": "epoch_not_match",
                "type": "EpochNotMatch"
              },
              {
                "id": 6,
                "name": "server_is_busy",
                "type": "ServerIsBusy"
              },
              {
                "id": 7,
                "name": "stale_command",
                "type": "StaleCommand"
              },
              {
                "id": 8,
                "name": "store_not_match",
                "type": "StoreNotMatch"
              },
              {
                "id": 9,
                "name": "raft_entry_too_large",
                "type": "RaftEntryTooLarge"
              },
              {
                "id": 10,
                "name": "max_timestamp_not_synced",
                "type": "MaxTimestampNotSynced"
              },
              {
                "id": 11,
                "name": "read_index_not_ready",
                "type": "ReadIndexNotReady"
              },
              {
                "id": 12,
                "name": "proposal_in_merging_mode",
                "type": "ProposalInMergingMode"
              },
              {
                "id": 13,
                "name": "data_is_not_ready",
                "type": "DataIsNotReady"
              },
              {
                "id": 14,
                "name": "region_not_initialized",
                "type": "RegionNotInitialized"
              },
              {
                "id": 15,
                "name": "disk_full",
                "type": "DiskFull"
              },
              {
                "id": 16,
                "name": "RecoveryInProgress",
                "type": "RecoveryInProgress"
              },
              {
                "id": 17,
                "name": "FlashbackInProgress",
                "type": "FlashbackInProgress"
              },
              {
                "id": 18,
                "name": "FlashbackNotPrepared",
                "type": "FlashbackNotPrepared"
              },
              {
                "id": 19,
                "name": "is_witness",
                "type": "IsWitness"
              }
            ],
            "reserved_names": [
              "stale_epoch"
            ]
          }
        ],
        "imports": [
          {
            "path": "metapb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "errorpb"
        },
        "options": [
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "gcpb.proto",
      "def": {
        "enums": [
          {
            "name": "ErrorType",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "UNKNOWN",
                "integer": 1
              },
              {
                "name": "NOT_BOOTSTRAPPED",
                "integer": 2
              },
              {
                "name": "REVISION_MISMATCH",
                "integer": 3
              },
              {
                "name": "SAFEPOINT_ROLLBACK",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "sender_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ResponseHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ErrorType"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "KeySpace",
            "fields": [
              {
                "id": 1,
                "name": "space_id",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "gc_safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ListKeySpacesRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "with_gc_safe_point",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListKeySpacesResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "key_spaces",
                "type": "KeySpace",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetMinServiceSafePointRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "space_id",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetMinServiceSafePointResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "safe_point",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "revision",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UpdateGCSafePointRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "space_id",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "safe_point",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "revision",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UpdateGCSafePointResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "succeeded",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "new_safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "UpdateServiceSafePointRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "space_id",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "service_id",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "TTL",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "UpdateServiceSafePointResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "succeeded",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "gc_safe_point",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "old_safe_point",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "new_safe_point",
                "type": "uint64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "GC",
            "rpcs": [
              {
                "name": "ListKeySpaces",
                "in_type": "ListKeySpacesRequest",
                "out_type": "ListKeySpacesResponse"
              },
              {
                "name": "GetMinServiceSafePoint",
                "in_type": "GetMinServiceSafePointRequest",
                "out_type": "GetMinServiceSafePointResponse"
              },
              {
                "name": "UpdateGCSafePoint",
                "in_type": "UpdateGCSafePointRequest",
                "out_type": "UpdateGCSafePointResponse"
              },
              {
                "name": "UpdateServiceSafePoint",
                "in_type": "UpdateServiceSafePointRequest",
                "out_type": "UpdateServiceSafePointResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "gcpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "import_kvpb.proto",
      "def": {
        "enums": [
          {
            "name": "Mutation.OP",
            "enum_fields": [
              {
                "name": "Put"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SwitchModeRequest",
            "fields": [
              {
                "id": 1,
                "name": "pd_addr",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request",
                "type": "import_sstpb.SwitchModeRequest"
              }
            ]
          },
          {
            "name": "SwitchModeResponse"
          },
          {
            "name": "OpenEngineRequest",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "key_prefix",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "OpenEngineResponse"
          },
          {
            "name": "WriteHead",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Mutation",
            "fields": [
              {
                "id": 1,
                "name": "op",
                "type": "OP"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "WriteBatch",
            "fields": [
              {
                "id": 1,
                "name": "commit_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "mutations",
                "type": "Mutation",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "WriteEngineRequest",
            "fields": [
              {
                "id": 1,
                "name": "head",
                "type": "WriteHead"
              },
              {
                "id": 2,
                "name": "batch",
                "type": "WriteBatch"
              }
            ]
          },
          {
            "name": "KVPair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "WriteEngineV3Request",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "commit_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "pairs",
                "type": "KVPair",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "WriteEngineResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "CloseEngineRequest",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "CloseEngineResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "ImportEngineRequest",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "pd_addr",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportEngineResponse"
          },
          {
            "name": "CleanupEngineRequest",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "CleanupEngineResponse"
          },
          {
            "name": "CompactClusterRequest",
            "fields": [
              {
                "id": 1,
                "name": "pd_addr",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request",
                "type": "import_sstpb.CompactRequest"
              }
            ]
          },
          {
            "name": "CompactClusterResponse"
          },
          {
            "name": "GetVersionRequest"
          },
          {
            "name": "GetVersionResponse",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "commit",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetMetricsRequest"
          },
          {
            "name": "GetMetricsResponse",
            "fields": [
              {
                "id": 1,
                "name": "prometheus",
                "type": "string"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "engine_not_found",
                "type": "EngineNotFound"
              }
            ],
            "messages": [
              {
                "name": "EngineNotFound",
                "fields": [
                  {
                    "id": 1,
                    "name": "uuid",
                    "type": "bytes"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImportKV",
            "rpcs": [
              {
                "name": "SwitchMode",
                "in_type": "SwitchModeRequest",
                "out_type": "SwitchModeResponse"
              },
              {
                "name": "OpenEngine",
                "in_type": "OpenEngineRequest",
                "out_type": "OpenEngineResponse"
              },
              {
                "name": "WriteEngine",
                "in_type": "WriteEngineRequest",
                "out_type": "WriteEngineResponse",
                "in_streamed": true
              },
              {
                "name": "WriteEngineV3",
                "in_type": "WriteEngineV3Request",
                "out_type": "WriteEngineResponse"
              },
              {
                "name": "CloseEngine",
                "in_type": "CloseEngineRequest",
                "out_type": "CloseEngineResponse"
              },
              {
                "name": "ImportEngine",
                "in_type": "ImportEngineRequest",
                "out_type": "ImportEngineResponse"
              },
              {
                "name": "CleanupEngine",
                "in_type": "CleanupEngineRequest",
                "out_type": "CleanupEngineResponse"
              },
              {
                "name": "CompactCluster",
                "in_type": "CompactClusterRequest",
                "out_type": "CompactClusterResponse"
              },
              {
                "name": "GetVersion",
                "in_type": "GetVersionRequest",
                "out_type": "GetVersionResponse"
              },
              {
                "name": "GetMetrics",
                "in_type": "GetMetricsRequest",
                "out_type": "GetMetricsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "import_sstpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "import_kvpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "import_sstpb.proto",
      "def": {
        "enums": [
          {
            "name": "SwitchMode",
            "enum_fields": [
              {
                "name": "Normal"
              },
              {
                "name": "Import",
                "integer": 1
              }
            ]
          },
          {
            "name": "DownloadRequestType",
            "enum_fields": [
              {
                "name": "Legacy"
              },
              {
                "name": "Keyspace",
                "integer": 1
              }
            ]
          },
          {
            "name": "Pair.OP",
            "enum_fields": [
              {
                "name": "Put"
              },
              {
                "name": "Delete",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SwitchModeRequest",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "SwitchMode"
              }
            ]
          },
          {
            "name": "SwitchModeResponse"
          },
          {
            "name": "GetModeRequest"
          },
          {
            "name": "GetModeResponse",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "SwitchMode"
              }
            ]
          },
          {
            "name": "Range",
            "fields": [
              {
                "id": 1,
                "name": "start",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "end",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "SSTMeta",
            "fields": [
              {
                "id": 1,
                "name": "uuid",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "range",
                "type": "Range"
              },
              {
                "id": 3,
                "name": "crc32",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "length",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "cf_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 8,
                "name": "end_key_exclusive",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "total_kvs",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "total_bytes",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "api_version",
                "type": "kvrpcpb.APIVersion"
              },
              {
                "id": 12,
                "name": "cipher_iv",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RewriteRule",
            "fields": [
              {
                "id": 1,
                "name": "old_key_prefix",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "new_key_prefix",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "new_timestamp",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "UploadRequest",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "SSTMeta"
              },
              {
                "id": 2,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "UploadResponse"
          },
          {
            "name": "IngestRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "kvrpcpb.Context"
              },
              {
                "id": 2,
                "name": "sst",
                "type": "SSTMeta"
              }
            ]
          },
          {
            "name": "MultiIngestRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "kvrpcpb.Context"
              },
              {
                "id": 2,
                "name": "ssts",
                "type": "SSTMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngestResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "errorpb.Error"
              }
            ]
          },
          {
            "name": "CompactRequest",
            "fields": [
              {
                "id": 1,
                "name": "range",
                "type": "Range"
              },
              {
                "id": 2,
                "name": "output_level",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "context",
                "type": "kvrpcpb.Context"
              }
            ]
          },
          {
            "name": "CompactResponse"
          },
          {
            "name": "DownloadRequest",
            "fields": [
              {
                "id": 2,
                "name": "sst",
                "type": "SSTMeta",
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 9,
                "name": "name",
                "type": "string"
              },
              {
                "id": 13,
                "name": "rewrite_rule",
                "type": "RewriteRule",
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 14,
                "name": "storage_backend",
                "type": "backup.StorageBackend"
              },
              {
                "id": 17,
                "name": "storage_cache_id",
                "type": "string"
              },
              {
                "id": 15,
                "name": "is_raw_kv",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "cipher_info",
                "type": "backup.CipherInfo"
              },
              {
                "id": 18,
                "name": "request_type",
                "type": "DownloadRequestType"
              }
            ],
            "reserved_ids": [
              8
            ],
            "reserved_names": [
              "url"
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              },
              {
                "id": 2,
                "name": "store_error",
                "type": "errorpb.Error"
              }
            ]
          },
          {
            "name": "DownloadResponse",
            "fields": [
              {
                "id": 1,
                "name": "range",
                "type": "Range",
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "is_empty",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 4,
                "name": "crc32",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "length",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SetDownloadSpeedLimitRequest",
            "fields": [
              {
                "id": 1,
                "name": "speed_limit",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SetDownloadSpeedLimitResponse"
          },
          {
            "name": "Pair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "op",
                "type": "OP"
              }
            ]
          },
          {
            "name": "WriteBatch",
            "fields": [
              {
                "id": 1,
                "name": "commit_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "pairs",
                "type": "Pair",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "WriteRequest",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "SSTMeta"
              },
              {
                "id": 2,
                "name": "batch",
                "type": "WriteBatch"
              }
            ]
          },
          {
            "name": "WriteResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "metas",
                "type": "SSTMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RawWriteBatch",
            "fields": [
              {
                "id": 1,
                "name": "ttl",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "pairs",
                "type": "Pair",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RawWriteRequest",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "SSTMeta"
              },
              {
                "id": 2,
                "name": "batch",
                "type": "RawWriteBatch"
              }
            ]
          },
          {
            "name": "RawWriteResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "metas",
                "type": "SSTMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DuplicateDetectRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "kvrpcpb.Context"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "key_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "min_commit_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "KvPair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "commit_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "DuplicateDetectResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "key_error",
                "type": "Error"
              },
              {
                "id": 3,
                "name": "pairs",
                "type": "KvPair",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "KVMeta",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "range_offset",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "length",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "range_length",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 4,
                "name": "is_delete",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "restore_ts",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 7,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "sha256",
                "type": "bytes"
              },
              {
                "id": 9,
                "name": "start_snapshot_ts",
                "type": "uint64"
              },
              {
                "id": 13,
                "name": "compression_type",
                "type": "backup.CompressionType"
              }
            ]
          },
          {
            "name": "ApplyRequest",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "KVMeta"
              },
              {
                "id": 12,
                "name": "metas",
                "type": "KVMeta",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "rewrite_rule",
                "type": "RewriteRule",
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 13,
                "name": "rewrite_rules",
                "type": "RewriteRule",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "storage_cache_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "storage_backend",
                "type": "backup.StorageBackend"
              },
              {
                "id": 4,
                "name": "context",
                "type": "kvrpcpb.Context"
              },
              {
                "id": 11,
                "name": "cipher_info",
                "type": "backup.CipherInfo"
              }
            ]
          },
          {
            "name": "ApplyResponse",
            "fields": [
              {
                "id": 1,
                "name": "range",
                "type": "Range",
                "options": [
                  {
                    "name": "(gogoproto.nullable)",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "ClearRequest",
            "fields": [
              {
                "id": 1,
                "name": "prefix",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClearResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImportSST",
            "rpcs": [
              {
                "name": "SwitchMode",
                "in_type": "SwitchModeRequest",
                "out_type": "SwitchModeResponse"
              },
              {
                "name": "GetMode",
                "in_type": "GetModeRequest",
                "out_type": "GetModeResponse"
              },
              {
                "name": "Upload",
                "in_type": "UploadRequest",
                "out_type": "UploadResponse",
                "in_streamed": true
              },
              {
                "name": "Ingest",
                "in_type": "IngestRequest",
                "out_type": "IngestResponse"
              },
              {
                "name": "Compact",
                "in_type": "CompactRequest",
                "out_type": "CompactResponse"
              },
              {
                "name": "SetDownloadSpeedLimit",
                "in_type": "SetDownloadSpeedLimitRequest",
                "out_type": "SetDownloadSpeedLimitResponse"
              },
              {
                "name": "Download",
                "in_type": "DownloadRequest",
                "out_type": "DownloadResponse"
              },
              {
                "name": "Write",
                "in_type": "WriteRequest",
                "out_type": "WriteResponse",
                "in_streamed": true
              },
              {
                "name": "RawWrite",
                "in_type": "RawWriteRequest",
                "out_type": "RawWriteResponse",
                "in_streamed": true
              },
              {
                "name": "MultiIngest",
                "in_type": "MultiIngestRequest",
                "out_type": "IngestResponse"
              },
              {
                "name": "DuplicateDetect",
                "in_type": "DuplicateDetectRequest",
                "out_type": "DuplicateDetectResponse",
                "out_streamed": true
              },
              {
                "name": "Apply",
                "in_type": "ApplyRequest",
                "out_type": "ApplyResponse"
              },
              {
                "name": "ClearFiles",
                "in_type": "ClearRequest",
                "out_type": "ClearResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "metapb.proto"
          },
          {
            "path": "errorpb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          },
          {
            "path": "brpb.proto"
          }
        ],
        "package": {
          "name": "import_sstpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "keyspacepb.proto",
      "def": {
        "enums": [
          {
            "name": "KeyspaceState",
            "enum_fields": [
              {
                "name": "ENABLED"
              },
              {
                "name": "DISABLED",
                "integer": 1
              },
              {
                "name": "ARCHIVED",
                "integer": 2
              },
              {
                "name": "TOMBSTONE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "KeyspaceMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "KeyspaceState"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "state_changed_at",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "config",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "LoadKeyspaceRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "pdpb.RequestHeader"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "LoadKeyspaceResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "pdpb.ResponseHeader"
              },
              {
                "id": 2,
                "name": "keyspace",
                "type": "KeyspaceMeta"
              }
            ]
          },
          {
            "name": "WatchKeyspacesRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "pdpb.RequestHeader"
              }
            ]
          },
          {
            "name": "WatchKeyspacesResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "pdpb.ResponseHeader"
              },
              {
                "id": 2,
                "name": "keyspaces",
                "type": "KeyspaceMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateKeyspaceStateRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "pdpb.RequestHeader"
              },
              {
                "id": 2,
                "name": "id",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "state",
                "type": "KeyspaceState"
              }
            ]
          },
          {
            "name": "UpdateKeyspaceStateResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "pdpb.ResponseHeader"
              },
              {
                "id": 2,
                "name": "keyspace",
                "type": "KeyspaceMeta"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Keyspace",
            "rpcs": [
              {
                "name": "LoadKeyspace",
                "in_type": "LoadKeyspaceRequest",
                "out_type": "LoadKeyspaceResponse"
              },
              {
                "name": "WatchKeyspaces",
                "in_type": "WatchKeyspacesRequest",
                "out_type": "WatchKeyspacesResponse",
                "out_streamed": true
              },
              {
                "name": "UpdateKeyspaceState",
                "in_type": "UpdateKeyspaceStateRequest",
                "out_type": "UpdateKeyspaceStateResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "pdpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "keyspacepb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "kvrpcpb.proto",
      "def": {
        "enums": [
          {
            "name": "PrewriteRequest.PessimisticAction",
            "enum_fields": [
              {
                "name": "SKIP_PESSIMISTIC_CHECK"
              },
              {
                "name": "DO_PESSIMISTIC_CHECK",
                "integer": 1
              },
              {
                "name": "DO_CONSTRAINT_CHECK",
                "integer": 2
              }
            ]
          },
          {
            "name": "PessimisticLockWakeUpMode",
            "enum_fields": [
              {
                "name": "WakeUpModeNormal"
              },
              {
                "name": "WakeUpModeForceLock",
                "integer": 1
              }
            ]
          },
          {
            "name": "PessimisticLockKeyResultType",
            "enum_fields": [
              {
                "name": "LockResultNormal"
              },
              {
                "name": "LockResultLockedWithConflict",
                "integer": 1
              },
              {
                "name": "LockResultFailed",
                "integer": 2
              }
            ]
          },
          {
            "name": "APIVersion",
            "enum_fields": [
              {
                "name": "V1"
              },
              {
                "name": "V1TTL",
                "integer": 1
              },
              {
                "name": "V2",
                "integer": 2
              }
            ]
          },
          {
            "name": "WriteConflict.Reason",
            "enum_fields": [
              {
                "name": "Unknown"
              },
              {
                "name": "Optimistic",
                "integer": 1
              },
              {
                "name": "PessimisticRetry",
                "integer": 2
              },
              {
                "name": "SelfRolledBack",
                "integer": 3
              },
              {
                "name": "RcCheckTs",
                "integer": 4
              },
              {
                "name": "LazyUniquenessCheck",
                "integer": 5
              }
            ]
          },
          {
            "name": "CommandPri",
            "enum_fields": [
              {
                "name": "Normal"
              },
              {
                "name": "Low",
                "integer": 1
              },
              {
                "name": "High",
                "integer": 2
              }
            ]
          },
          {
            "name": "IsolationLevel",
            "enum_fields": [
              {
                "name": "SI"
              },
              {
                "name": "RC",
                "integer": 1
              },
              {
                "name": "RCCheckTS",
                "integer": 2
              }
            ]
          },
          {
            "name": "DiskFullOpt",
            "enum_fields": [
              {
                "name": "NotAllowedOnFull"
              },
              {
                "name": "AllowedOnAlmostFull",
                "integer": 1
              },
              {
                "name": "AllowedOnAlreadyFull",
                "integer": 2
              }
            ]
          },
          {
            "name": "Op",
            "enum_fields": [
              {
                "name": "Put"
              },
              {
                "name": "Del",
                "integer": 1
              },
              {
                "name": "Lock",
                "integer": 2
              },
              {
                "name": "Rollback",
                "integer": 3
              },
              {
                "name": "Insert",
                "integer": 4
              },
              {
                "name": "PessimisticLock",
                "integer": 5
              },
              {
                "name": "CheckNotExists",
                "integer": 6
              }
            ]
          },
          {
            "name": "Assertion",
            "enum_fields": [
              {
                "name": "None"
              },
              {
                "name": "Exist",
                "integer": 1
              },
              {
                "name": "NotExist",
                "integer": 2
              }
            ]
          },
          {
            "name": "AssertionLevel",
            "enum_fields": [
              {
                "name": "Off"
              },
              {
                "name": "Fast",
                "integer": 1
              },
              {
                "name": "Strict",
                "integer": 2
              }
            ]
          },
          {
            "name": "Action",
            "enum_fields": [
              {
                "name": "NoAction"
              },
              {
                "name": "TTLExpireRollback",
                "integer": 1
              },
              {
                "name": "LockNotExistRollback",
                "integer": 2
              },
              {
                "name": "MinCommitTSPushed",
                "integer": 3
              },
              {
                "name": "TTLExpirePessimisticRollback",
                "integer": 4
              },
              {
                "name": "LockNotExistDoNothing",
                "integer": 5
              }
            ]
          },
          {
            "name": "ExtraOp",
            "enum_fields": [
              {
                "name": "Noop"
              },
              {
                "name": "ReadOldValue",
                "integer": 1
              }
            ]
          },
          {
            "name": "ChecksumAlgorithm",
            "enum_fields": [
              {
                "name": "Crc64_Xor"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GetResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "not_found",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "ScanRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "limit",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "version",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "key_only",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "reverse",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "sample_step",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "ScanResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "pairs",
                "type": "KvPair",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "error",
                "type": "KeyError"
              }
            ]
          },
          {
            "name": "PrewriteRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "mutations",
                "type": "Mutation",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "primary_lock",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "lock_ttl",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "skip_constraint_check",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "pessimistic_actions",
                "type": "PessimisticAction",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "txn_size",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "for_update_ts",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "min_commit_ts",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "use_async_commit",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "secondaries",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "try_one_pc",
                "type": "bool"
              },
              {
                "id": 14,
                "name": "max_commit_ts",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "assertion_level",
                "type": "AssertionLevel"
              }
            ]
          },
          {
            "name": "PrewriteResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "errors",
                "type": "KeyError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "min_commit_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "one_pc_commit_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "PessimisticLockRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "mutations",
                "type": "Mutation",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "primary_lock",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "lock_ttl",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "for_update_ts",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "is_first_lock",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "wait_timeout",
                "type": "int64"
              },
              {
                "id": 9,
                "name": "force",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 10,
                "name": "return_values",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "min_commit_ts",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "check_existence",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "lock_only_if_exists",
                "type": "bool"
              },
              {
                "id": 14,
                "name": "wake_up_mode",
                "type": "PessimisticLockWakeUpMode"
              }
            ]
          },
          {
            "name": "PessimisticLockKeyResult",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "PessimisticLockKeyResultType"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "existence",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "locked_with_conflict_ts",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "skip_resolving_lock",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PessimisticLockResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "errors",
                "type": "KeyError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "commit_ts",
                "type": "uint64",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "value",
                "type": "bytes",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "values",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "not_founds",
                "type": "bool",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              },
              {
                "id": 8,
                "name": "results",
                "type": "PessimisticLockKeyResult",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PessimisticRollbackRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "for_update_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PessimisticRollbackResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "errors",
                "type": "KeyError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "TxnHeartBeatRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "primary_lock",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "advise_lock_ttl",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TxnHeartBeatResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "lock_ttl",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "CheckTxnStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "primary_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "lock_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "caller_start_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "current_ts",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "rollback_if_not_exist",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "force_sync_commit",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "resolving_pessimistic_lock",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CheckTxnStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "lock_ttl",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "commit_version",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "action",
                "type": "Action"
              },
              {
                "id": 6,
                "name": "lock_info",
                "type": "LockInfo"
              },
              {
                "id": 7,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "CheckSecondaryLocksRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "start_version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CheckSecondaryLocksResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "locks",
                "type": "LockInfo",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "commit_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "CommitRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "commit_version",
                "type": "uint64"
              }
            ],
            "reserved_ids": [
              5
            ],
            "reserved_names": [
              "binlog"
            ]
          },
          {
            "name": "CommitResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "commit_version",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "ImportRequest",
            "fields": [
              {
                "id": 1,
                "name": "mutations",
                "type": "Mutation",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "commit_version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ImportResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "CleanupRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "current_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CleanupResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "commit_version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "BatchGetRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "BatchGetResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "pairs",
                "type": "KvPair",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              },
              {
                "id": 5,
                "name": "error",
                "type": "KeyError"
              }
            ],
            "reserved_ids": [
              3
            ]
          },
          {
            "name": "BatchRollbackRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BatchRollbackResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "ScanLockRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "max_version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "limit",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "end_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "ScanLockResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "locks",
                "type": "LockInfo",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "ResolveLockRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "commit_version",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "txn_infos",
                "type": "TxnInfo",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResolveLockResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 3,
                "name": "exec_details_v2",
                "type": "ExecDetailsV2"
              }
            ]
          },
          {
            "name": "GCRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GCResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "KeyError"
              }
            ]
          },
          {
            "name": "DeleteRangeRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "notify_only",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteRangeResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "PrepareFlashbackToVersionRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "PrepareFlashbackToVersionResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "FlashbackToVersionRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "commit_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "FlashbackToVersionResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawGetRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawGetResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "not_found",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RawBatchGetRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawBatchGetResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "pairs",
                "type": "KvPair",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RawPutRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 5,
                "name": "ttl",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "for_cas",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RawPutResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawBatchPutRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "pairs",
                "type": "KvPair",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ttl",
                "type": "uint64",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "for_cas",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "ttls",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RawBatchPutResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawDeleteRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 4,
                "name": "for_cas",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RawDeleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawBatchDeleteRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 4,
                "name": "for_cas",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RawBatchDeleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawScanRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "limit",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "key_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 6,
                "name": "reverse",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "end_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RawScanResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "kvs",
                "type": "KvPair",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RawDeleteRangeRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "cf",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawDeleteRangeResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawBatchScanRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "KeyRange",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "each_limit",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "key_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 6,
                "name": "reverse",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RawBatchScanResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "kvs",
                "type": "KvPair",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UnsafeDestroyRangeRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "UnsafeDestroyRangeResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "RegisterLockObserverRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "max_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegisterLockObserverResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "CheckLockObserverRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "max_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CheckLockObserverResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_clean",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "locks",
                "type": "LockInfo",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RemoveLockObserverRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "max_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RemoveLockObserverResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "PhysicalScanLockRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "max_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "limit",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "PhysicalScanLockResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "locks",
                "type": "LockInfo",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SplitRegionRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "split_key",
                "type": "bytes",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "split_keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "is_raw_kv",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SplitRegionResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "left",
                "type": "metapb.Region",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "right",
                "type": "metapb.Region",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "regions",
                "type": "metapb.Region",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReadIndexRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "ranges",
                "type": "KeyRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReadIndexResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "read_index",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "locked",
                "type": "kvrpcpb.LockInfo"
              }
            ]
          },
          {
            "name": "MvccGetByKeyRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "MvccGetByKeyResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "info",
                "type": "MvccInfo"
              }
            ]
          },
          {
            "name": "MvccGetByStartTsRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "start_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "MvccGetByStartTsResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "info",
                "type": "MvccInfo"
              }
            ]
          },
          {
            "name": "Context",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 3,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 5,
                "name": "term",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "priority",
                "type": "CommandPri"
              },
              {
                "id": 7,
                "name": "isolation_level",
                "type": "IsolationLevel"
              },
              {
                "id": 8,
                "name": "not_fill_cache",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "sync_log",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "record_time_stat",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "record_scan_stat",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "replica_read",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "resolved_locks",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "max_execution_duration_ms",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "applied_index",
                "type": "uint64"
              },
              {
                "id": 16,
                "name": "task_id",
                "type": "uint64"
              },
              {
                "id": 17,
                "name": "stale_read",
                "type": "bool"
              },
              {
                "id": 18,
                "name": "resource_group_tag",
                "type": "bytes"
              },
              {
                "id": 19,
                "name": "disk_full_opt",
                "type": "DiskFullOpt"
              },
              {
                "id": 20,
                "name": "is_retry_request",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "api_version",
                "type": "APIVersion"
              },
              {
                "id": 22,
                "name": "committed_locks",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "trace_context",
                "type": "tracepb.TraceContext"
              },
              {
                "id": 24,
                "name": "request_source",
                "type": "string"
              },
              {
                "id": 25,
                "name": "txn_source",
                "type": "uint64"
              },
              {
                "id": 26,
                "name": "resource_group_name",
                "type": "string"
              },
              {
                "id": 27,
                "name": "busy_threshold_ms",
                "type": "uint32"
              },
              {
                "id": 32,
                "name": "keyspace_id",
                "type": "uint32"
              }
            ],
            "reserved_ids": [
              4
            ],
            "reserved_names": [
              "read_quorum"
            ]
          },
          {
            "name": "LockInfo",
            "fields": [
              {
                "id": 1,
                "name": "primary_lock",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "lock_version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "lock_ttl",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "txn_size",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "lock_type",
                "type": "Op"
              },
              {
                "id": 7,
                "name": "lock_for_update_ts",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "use_async_commit",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "min_commit_ts",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "secondaries",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "KeyError",
            "fields": [
              {
                "id": 1,
                "name": "locked",
                "type": "LockInfo"
              },
              {
                "id": 2,
                "name": "retryable",
                "type": "string"
              },
              {
                "id": 3,
                "name": "abort",
                "type": "string"
              },
              {
                "id": 4,
                "name": "conflict",
                "type": "WriteConflict"
              },
              {
                "id": 5,
                "name": "already_exist",
                "type": "AlreadyExist"
              },
              {
                "id": 6,
                "name": "deadlock",
                "type": "Deadlock"
              },
              {
                "id": 7,
                "name": "commit_ts_expired",
                "type": "CommitTsExpired"
              },
              {
                "id": 8,
                "name": "txn_not_found",
                "type": "TxnNotFound"
              },
              {
                "id": 9,
                "name": "commit_ts_too_large",
                "type": "CommitTsTooLarge"
              },
              {
                "id": 10,
                "name": "assertion_failed",
                "type": "AssertionFailed"
              }
            ]
          },
          {
            "name": "WriteConflict",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "conflict_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "primary",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "conflict_commit_ts",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "reason",
                "type": "Reason"
              }
            ]
          },
          {
            "name": "AlreadyExist",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Deadlock",
            "fields": [
              {
                "id": 1,
                "name": "lock_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "lock_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "deadlock_key_hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "wait_chain",
                "type": "deadlock.WaitForEntry",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CommitTsExpired",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "attempted_commit_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "min_commit_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TxnNotFound",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "primary_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "CommitTsTooLarge",
            "fields": [
              {
                "id": 1,
                "name": "commit_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "AssertionFailed",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "assertion",
                "type": "Assertion"
              },
              {
                "id": 4,
                "name": "existing_start_ts",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "existing_commit_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TimeDetail",
            "fields": [
              {
                "id": 1,
                "name": "wait_wall_time_ms",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "process_wall_time_ms",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "kv_read_wall_time_ms",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "total_rpc_wall_time_ns",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TimeDetailV2",
            "fields": [
              {
                "id": 1,
                "name": "wait_wall_time_ns",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "process_wall_time_ns",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "process_suspend_wall_time_ns",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "kv_read_wall_time_ns",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "total_rpc_wall_time_ns",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ScanInfo",
            "fields": [
              {
                "id": 1,
                "name": "total",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "processed",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "read_bytes",
                "type": "int64"
              }
            ]
          },
          {
            "name": "ScanDetail",
            "fields": [
              {
                "id": 1,
                "name": "write",
                "type": "ScanInfo"
              },
              {
                "id": 2,
                "name": "lock",
                "type": "ScanInfo"
              },
              {
                "id": 3,
                "name": "data",
                "type": "ScanInfo"
              }
            ]
          },
          {
            "name": "ScanDetailV2",
            "fields": [
              {
                "id": 1,
                "name": "processed_versions",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "processed_versions_size",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "total_versions",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "rocksdb_delete_skipped_count",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "rocksdb_key_skipped_count",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "rocksdb_block_cache_hit_count",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "rocksdb_block_read_count",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "rocksdb_block_read_byte",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "rocksdb_block_read_nanos",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "get_snapshot_nanos",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "read_index_propose_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "read_index_confirm_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 13,
                "name": "read_pool_schedule_wait_nanos",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ExecDetails",
            "fields": [
              {
                "id": 1,
                "name": "time_detail",
                "type": "TimeDetail"
              },
              {
                "id": 2,
                "name": "scan_detail",
                "type": "ScanDetail"
              }
            ],
            "reserved_ids": [
              3,
              4
            ]
          },
          {
            "name": "ExecDetailsV2",
            "fields": [
              {
                "id": 1,
                "name": "time_detail",
                "type": "TimeDetail"
              },
              {
                "id": 2,
                "name": "scan_detail_v2",
                "type": "ScanDetailV2"
              },
              {
                "id": 3,
                "name": "write_detail",
                "type": "WriteDetail"
              },
              {
                "id": 4,
                "name": "time_detail_v2",
                "type": "TimeDetailV2"
              }
            ]
          },
          {
            "name": "WriteDetail",
            "fields": [
              {
                "id": 1,
                "name": "store_batch_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "propose_send_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "persist_log_nanos",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "raft_db_write_leader_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "raft_db_sync_log_nanos",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "raft_db_write_memtable_nanos",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "commit_log_nanos",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "apply_batch_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "apply_log_nanos",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "apply_mutex_lock_nanos",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "apply_write_leader_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "apply_write_wal_nanos",
                "type": "uint64"
              },
              {
                "id": 13,
                "name": "apply_write_memtable_nanos",
                "type": "uint64"
              },
              {
                "id": 14,
                "name": "latch_wait_nanos",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "process_nanos",
                "type": "uint64"
              },
              {
                "id": 16,
                "name": "throttle_nanos",
                "type": "uint64"
              },
              {
                "id": 17,
                "name": "pessimistic_lock_wait_nanos",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "KvPair",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "KeyError"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Mutation",
            "fields": [
              {
                "id": 1,
                "name": "op",
                "type": "Op"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "assertion",
                "type": "Assertion"
              }
            ]
          },
          {
            "name": "MvccWrite",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Op"
              },
              {
                "id": 2,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "commit_ts",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "short_value",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "has_overlapped_rollback",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "has_gc_fence",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "gc_fence",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "last_change_ts",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "versions_to_last_change",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "MvccValue",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "MvccLock",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Op"
              },
              {
                "id": 2,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "primary",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "short_value",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "ttl",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "for_update_ts",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "txn_size",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "use_async_commit",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "secondaries",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "rollback_ts",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "last_change_ts",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "versions_to_last_change",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "MvccInfo",
            "fields": [
              {
                "id": 1,
                "name": "lock",
                "type": "MvccLock"
              },
              {
                "id": 2,
                "name": "writes",
                "type": "MvccWrite",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "values",
                "type": "MvccValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TxnInfo",
            "fields": [
              {
                "id": 1,
                "name": "txn",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "status",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "KeyRange",
            "fields": [
              {
                "id": 1,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "end_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "LeaderInfo",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "peer_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "term",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 5,
                "name": "read_state",
                "type": "ReadState"
              }
            ]
          },
          {
            "name": "ReadState",
            "fields": [
              {
                "id": 1,
                "name": "applied_index",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "safe_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CheckLeaderRequest",
            "fields": [
              {
                "id": 1,
                "name": "regions",
                "type": "LeaderInfo",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CheckLeaderResponse",
            "fields": [
              {
                "id": 1,
                "name": "regions",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "StoreSafeTSRequest",
            "fields": [
              {
                "id": 1,
                "name": "key_range",
                "type": "KeyRange"
              }
            ]
          },
          {
            "name": "StoreSafeTSResponse",
            "fields": [
              {
                "id": 1,
                "name": "safe_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RawGetKeyTTLRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "cf",
                "type": "string"
              }
            ]
          },
          {
            "name": "RawGetKeyTTLResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "ttl",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "not_found",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RawCASRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "previous_not_exist",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "previous_value",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 7,
                "name": "ttl",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RawCASResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "succeed",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "previous_not_exist",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "previous_value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetLockWaitInfoRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              }
            ]
          },
          {
            "name": "GetLockWaitInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "entries",
                "type": "deadlock.WaitForEntry",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetLockWaitHistoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              }
            ]
          },
          {
            "name": "GetLockWaitHistoryResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "entries",
                "type": "deadlock.WaitForEntry",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RawCoprocessorRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "kvrpcpb.Context"
              },
              {
                "id": 2,
                "name": "copr_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "copr_version_req",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ranges",
                "type": "KeyRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RawCoprocessorResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RawChecksumRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 2,
                "name": "algorithm",
                "type": "ChecksumAlgorithm"
              },
              {
                "id": 3,
                "name": "ranges",
                "type": "KeyRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RawChecksumResponse",
            "fields": [
              {
                "id": 1,
                "name": "region_error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "checksum",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "total_kvs",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "total_bytes",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CompactError",
            "fields": [
              {
                "id": 1,
                "name": "err_invalid_start_key",
                "type": "CompactErrorInvalidStartKey"
              },
              {
                "id": 2,
                "name": "err_physical_table_not_exist",
                "type": "CompactErrorPhysicalTableNotExist"
              },
              {
                "id": 3,
                "name": "err_compact_in_progress",
                "type": "CompactErrorCompactInProgress"
              },
              {
                "id": 4,
                "name": "err_too_many_pending_tasks",
                "type": "CompactErrorTooManyPendingTasks"
              }
            ]
          },
          {
            "name": "CompactErrorInvalidStartKey"
          },
          {
            "name": "CompactErrorPhysicalTableNotExist"
          },
          {
            "name": "CompactErrorCompactInProgress"
          },
          {
            "name": "CompactErrorTooManyPendingTasks"
          },
          {
            "name": "CompactRequest",
            "fields": [
              {
                "id": 1,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "physical_table_id",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "logical_table_id",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "api_version",
                "type": "APIVersion"
              },
              {
                "id": 8,
                "name": "keyspace_id",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "CompactResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "CompactError"
              },
              {
                "id": 2,
                "name": "has_remaining",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "compacted_start_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "compacted_end_key",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "metapb.proto"
          },
          {
            "path": "errorpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          },
          {
            "path": "deadlock.proto"
          },
          {
            "path": "tracepb.proto"
          }
        ],
        "package": {
          "name": "kvrpcpb"
        },
        "options": [
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "logbackuppb.proto",
      "def": {
        "messages": [
          {
            "name": "RegionIdentity",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "epoch_version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionCheckpoint",
            "fields": [
              {
                "id": 1,
                "name": "err",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "region",
                "type": "RegionIdentity"
              },
              {
                "id": 3,
                "name": "checkpoint",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GetLastFlushTSOfRegionRequest",
            "fields": [
              {
                "id": 1,
                "name": "regions",
                "type": "RegionIdentity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetLastFlushTSOfRegionResponse",
            "fields": [
              {
                "id": 1,
                "name": "checkpoints",
                "type": "RegionCheckpoint",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SubscribeFlushEventRequest",
            "fields": [
              {
                "id": 1,
                "name": "client_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "SubscribeFlushEventResponse",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "FlushEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlushEvent",
            "fields": [
              {
                "id": 1,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "checkpoint",
                "type": "uint64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "LogBackup",
            "rpcs": [
              {
                "name": "GetLastFlushTSOfRegion",
                "in_type": "GetLastFlushTSOfRegionRequest",
                "out_type": "GetLastFlushTSOfRegionResponse"
              },
              {
                "name": "SubscribeFlushEvent",
                "in_type": "SubscribeFlushEventRequest",
                "out_type": "SubscribeFlushEventResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          },
          {
            "path": "errorpb.proto"
          }
        ],
        "package": {
          "name": "logbackup"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "meta_storagepb.proto",
      "def": {
        "enums": [
          {
            "name": "ErrorType",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "UNKNOWN",
                "integer": 1
              },
              {
                "name": "DATA_COMPACTED",
                "integer": 2
              }
            ]
          },
          {
            "name": "Event.EventType",
            "enum_fields": [
              {
                "name": "PUT"
              },
              {
                "name": "DELETE",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ErrorType"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "RequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              }
            ]
          },
          {
            "name": "ResponseHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 3,
                "name": "revision",
                "type": "int64"
              }
            ]
          },
          {
            "name": "WatchRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "range_end",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "start_revision",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "prev_kv",
                "type": "bool"
              }
            ]
          },
          {
            "name": "WatchResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "compact_revision",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "events",
                "type": "Event",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "range_end",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "limit",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "revision",
                "type": "int64"
              }
            ]
          },
          {
            "name": "GetResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "kvs",
                "type": "KeyValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "more",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "count",
                "type": "int64"
              }
            ]
          },
          {
            "name": "PutRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "lease",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "prev_kv",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PutResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "prev_kv",
                "type": "KeyValue"
              }
            ]
          },
          {
            "name": "KeyValue",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "create_revision",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "mod_revision",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "version",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 6,
                "name": "lease",
                "type": "int64"
              }
            ]
          },
          {
            "name": "Event",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "EventType"
              },
              {
                "id": 2,
                "name": "kv",
                "type": "KeyValue"
              },
              {
                "id": 3,
                "name": "prev_kv",
                "type": "KeyValue"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MetaStorage",
            "rpcs": [
              {
                "name": "Watch",
                "in_type": "WatchRequest",
                "out_type": "WatchResponse",
                "out_streamed": true
              },
              {
                "name": "Get",
                "in_type": "GetRequest",
                "out_type": "GetResponse"
              },
              {
                "name": "Put",
                "in_type": "PutRequest",
                "out_type": "PutResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "meta_storagepb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "metapb.proto",
      "def": {
        "enums": [
          {
            "name": "StoreState",
            "enum_fields": [
              {
                "name": "Up"
              },
              {
                "name": "Offline",
                "integer": 1
              },
              {
                "name": "Tombstone",
                "integer": 2
              }
            ]
          },
          {
            "name": "NodeState",
            "enum_fields": [
              {
                "name": "Preparing"
              },
              {
                "name": "Serving",
                "integer": 1
              },
              {
                "name": "Removing",
                "integer": 2
              },
              {
                "name": "Removed",
                "integer": 3
              }
            ]
          },
          {
            "name": "PeerRole",
            "enum_fields": [
              {
                "name": "Voter"
              },
              {
                "name": "Learner",
                "integer": 1
              },
              {
                "name": "IncomingVoter",
                "integer": 2
              },
              {
                "name": "DemotingVoter",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Cluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "max_peer_count",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "StoreLabel",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "Store",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "address",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "StoreState"
              },
              {
                "id": 4,
                "name": "labels",
                "type": "StoreLabel",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "version",
                "type": "string"
              },
              {
                "id": 6,
                "name": "peer_address",
                "type": "string"
              },
              {
                "id": 7,
                "name": "status_address",
                "type": "string"
              },
              {
                "id": 8,
                "name": "git_hash",
                "type": "string"
              },
              {
                "id": 9,
                "name": "start_timestamp",
                "type": "int64"
              },
              {
                "id": 10,
                "name": "deploy_path",
                "type": "string"
              },
              {
                "id": 11,
                "name": "last_heartbeat",
                "type": "int64"
              },
              {
                "id": 12,
                "name": "physically_destroyed",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "node_state",
                "type": "NodeState"
              }
            ]
          },
          {
            "name": "RegionEpoch",
            "fields": [
              {
                "id": 1,
                "name": "conf_ver",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "BucketStats",
            "fields": [
              {
                "id": 1,
                "name": "read_bytes",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "write_bytes",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "read_qps",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "write_qps",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "read_keys",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "write_keys",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Buckets",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "version",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "stats",
                "type": "BucketStats"
              },
              {
                "id": 5,
                "name": "period_in_ms",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Region",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "region_epoch",
                "type": "RegionEpoch"
              },
              {
                "id": 5,
                "name": "peers",
                "type": "Peer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "encryption_meta",
                "type": "encryptionpb.EncryptionMeta"
              },
              {
                "id": 7,
                "name": "is_in_flashback",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "flashback_start_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Peer",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "store_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "role",
                "type": "PeerRole"
              },
              {
                "id": 4,
                "name": "is_witness",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "encryptionpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "metapb"
        },
        "options": [
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "mpp.proto",
      "def": {
        "messages": [
          {
            "name": "TaskMeta",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "task_id",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "partition_id",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "address",
                "type": "string"
              },
              {
                "id": 5,
                "name": "gather_id",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "query_ts",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "local_query_id",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "server_id",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "mpp_version",
                "type": "int64"
              },
              {
                "id": 10,
                "name": "keyspace_id",
                "type": "uint32"
              },
              {
                "id": 16,
                "name": "api_version",
                "type": "kvrpcpb.APIVersion"
              }
            ]
          },
          {
            "name": "IsAliveRequest"
          },
          {
            "name": "IsAliveResponse",
            "fields": [
              {
                "id": 1,
                "name": "available",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "mpp_version",
                "type": "int64"
              }
            ]
          },
          {
            "name": "DispatchTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "TaskMeta"
              },
              {
                "id": 2,
                "name": "encoded_plan",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "timeout",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "regions",
                "type": "coprocessor.RegionInfo",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "schema_ver",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "table_regions",
                "type": "coprocessor.TableRegions",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DispatchTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "retry_regions",
                "type": "metapb.Region",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CancelTaskRequest",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "TaskMeta"
              },
              {
                "id": 2,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "CancelTaskResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "EstablishMPPConnectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "sender_meta",
                "type": "TaskMeta"
              },
              {
                "id": 2,
                "name": "receiver_meta",
                "type": "TaskMeta"
              }
            ]
          },
          {
            "name": "MPPDataPacket",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 3,
                "name": "chunks",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "stream_ids",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "version",
                "type": "int64"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "msg",
                "type": "string"
              },
              {
                "id": 3,
                "name": "mpp_version",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "coprocessor.proto"
          },
          {
            "path": "metapb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          }
        ],
        "package": {
          "name": "mpp"
        },
        "options": [
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "pdpb.proto",
      "def": {
        "enums": [
          {
            "name": "EventType",
            "enum_fields": [
              {
                "name": "PUT"
              },
              {
                "name": "DELETE",
                "integer": 1
              }
            ]
          },
          {
            "name": "ErrorType",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "UNKNOWN",
                "integer": 1
              },
              {
                "name": "NOT_BOOTSTRAPPED",
                "integer": 2
              },
              {
                "name": "STORE_TOMBSTONE",
                "integer": 3
              },
              {
                "name": "ALREADY_BOOTSTRAPPED",
                "integer": 4
              },
              {
                "name": "INCOMPATIBLE_VERSION",
                "integer": 5
              },
              {
                "name": "REGION_NOT_FOUND",
                "integer": 6
              },
              {
                "name": "GLOBAL_CONFIG_NOT_FOUND",
                "integer": 7
              },
              {
                "name": "DUPLICATED_ENTRY",
                "integer": 8
              },
              {
                "name": "ENTRY_NOT_FOUND",
                "integer": 9
              },
              {
                "name": "INVALID_VALUE",
                "integer": 10
              },
              {
                "name": "DATA_COMPACTED",
                "integer": 11
              }
            ]
          },
          {
            "name": "ServiceMode",
            "enum_fields": [
              {
                "name": "UNKNOWN_SVC_MODE"
              },
              {
                "name": "PD_SVC_MODE",
                "integer": 1
              },
              {
                "name": "API_SVC_MODE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CheckPolicy",
            "enum_fields": [
              {
                "name": "SCAN"
              },
              {
                "name": "APPROXIMATE",
                "integer": 1
              },
              {
                "name": "USEKEY",
                "integer": 2
              }
            ]
          },
          {
            "name": "OperatorStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "TIMEOUT",
                "integer": 1
              },
              {
                "name": "CANCEL",
                "integer": 2
              },
              {
                "name": "REPLACE",
                "integer": 3
              },
              {
                "name": "RUNNING",
                "integer": 4
              }
            ]
          },
          {
            "name": "QueryKind",
            "enum_fields": [
              {
                "name": "Others"
              },
              {
                "name": "GC",
                "integer": 1
              },
              {
                "name": "Get",
                "integer": 2
              },
              {
                "name": "Scan",
                "integer": 3
              },
              {
                "name": "Coprocessor",
                "integer": 4
              },
              {
                "name": "Delete",
                "integer": 5
              },
              {
                "name": "DeleteRange",
                "integer": 6
              },
              {
                "name": "Put",
                "integer": 7
              },
              {
                "name": "Prewrite",
                "integer": 8
              },
              {
                "name": "AcquirePessimisticLock",
                "integer": 9
              },
              {
                "name": "Commit",
                "integer": 10
              },
              {
                "name": "Rollback",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "WatchGlobalConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config_path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "revision",
                "type": "int64"
              }
            ]
          },
          {
            "name": "WatchGlobalConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "changes",
                "type": "GlobalConfigItem",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "revision",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "StoreGlobalConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "changes",
                "type": "GlobalConfigItem",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "config_path",
                "type": "string"
              }
            ]
          },
          {
            "name": "StoreGlobalConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "LoadGlobalConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "config_path",
                "type": "string"
              }
            ]
          },
          {
            "name": "LoadGlobalConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "GlobalConfigItem",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "revision",
                "type": "int64"
              }
            ]
          },
          {
            "name": "GlobalConfigItem",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 4,
                "name": "kind",
                "type": "EventType"
              },
              {
                "id": 5,
                "name": "payload",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "sender_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ResponseHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ErrorType"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "TsoRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "count",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "dc_location",
                "type": "string"
              }
            ]
          },
          {
            "name": "Timestamp",
            "fields": [
              {
                "id": 1,
                "name": "physical",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "logical",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "suffix_bits",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "TsoResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "count",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "Timestamp"
              }
            ]
          },
          {
            "name": "BootstrapRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "store",
                "type": "metapb.Store"
              },
              {
                "id": 3,
                "name": "region",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "BootstrapResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "replication_status",
                "type": "replication_modepb.ReplicationStatus"
              }
            ]
          },
          {
            "name": "IsBootstrappedRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              }
            ]
          },
          {
            "name": "IsBootstrappedResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "bootstrapped",
                "type": "bool"
              }
            ]
          },
          {
            "name": "AllocIDRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              }
            ]
          },
          {
            "name": "AllocIDResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "IsSnapshotRecoveringRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              }
            ]
          },
          {
            "name": "IsSnapshotRecoveringResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "marked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetStoreRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "store_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GetStoreResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "store",
                "type": "metapb.Store"
              },
              {
                "id": 3,
                "name": "stats",
                "type": "StoreStats"
              }
            ]
          },
          {
            "name": "PutStoreRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "store",
                "type": "metapb.Store"
              }
            ]
          },
          {
            "name": "PutStoreResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "replication_status",
                "type": "replication_modepb.ReplicationStatus"
              }
            ]
          },
          {
            "name": "GetAllStoresRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "exclude_tombstone_stores",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAllStoresResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "stores",
                "type": "metapb.Store",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRegionRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "need_buckets",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetRegionResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 3,
                "name": "leader",
                "type": "metapb.Peer"
              },
              {
                "id": 5,
                "name": "down_peers",
                "type": "PeerStats",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "pending_peers",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "buckets",
                "type": "metapb.Buckets"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "GetRegionByIDRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "need_buckets",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScanRegionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "end_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Region",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 2,
                "name": "leader",
                "type": "metapb.Peer"
              },
              {
                "id": 3,
                "name": "down_peers",
                "type": "PeerStats",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "pending_peers",
                "type": "metapb.Peer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScanRegionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "region_metas",
                "type": "metapb.Region",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "leaders",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "regions",
                "type": "Region",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetClusterConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              }
            ]
          },
          {
            "name": "GetClusterConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "metapb.Cluster"
              }
            ]
          },
          {
            "name": "PutClusterConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "metapb.Cluster"
              }
            ]
          },
          {
            "name": "PutClusterConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "Member",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "member_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "peer_urls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "client_urls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "leader_priority",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "deploy_path",
                "type": "string"
              },
              {
                "id": 7,
                "name": "binary_version",
                "type": "string"
              },
              {
                "id": 8,
                "name": "git_hash",
                "type": "string"
              },
              {
                "id": 9,
                "name": "dc_location",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetMembersRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              }
            ]
          },
          {
            "name": "GetMembersResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "members",
                "type": "Member",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "leader",
                "type": "Member"
              },
              {
                "id": 4,
                "name": "etcd_leader",
                "type": "Member"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "tso_allocator_leaders",
                  "type": "Member"
                }
              }
            ]
          },
          {
            "name": "GetClusterInfoRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "GetClusterInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "serviceModes",
                "type": "ServiceMode",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PeerStats",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 2,
                "name": "down_seconds",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionHeartbeatRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 3,
                "name": "leader",
                "type": "metapb.Peer"
              },
              {
                "id": 4,
                "name": "down_peers",
                "type": "PeerStats",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "pending_peers",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "bytes_written",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "bytes_read",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "keys_written",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "keys_read",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "approximate_size",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "interval",
                "type": "TimeInterval"
              },
              {
                "id": 13,
                "name": "approximate_keys",
                "type": "uint64"
              },
              {
                "id": 14,
                "name": "term",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "replication_status",
                "type": "replication_modepb.RegionReplicationStatus"
              },
              {
                "id": 16,
                "name": "query_stats",
                "type": "QueryStats"
              },
              {
                "id": 17,
                "name": "cpu_usage",
                "type": "uint64"
              },
              {
                "id": 18,
                "name": "approximate_kv_size",
                "type": "uint64"
              }
            ],
            "reserved_ids": [
              11
            ]
          },
          {
            "name": "ChangePeer",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 2,
                "name": "change_type",
                "type": "eraftpb.ConfChangeType"
              }
            ]
          },
          {
            "name": "ChangePeerV2",
            "fields": [
              {
                "id": 1,
                "name": "changes",
                "type": "ChangePeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TransferLeader",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "metapb.Peer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Merge",
            "fields": [
              {
                "id": 1,
                "name": "target",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "SplitRegion",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "CheckPolicy"
              },
              {
                "id": 2,
                "name": "keys",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SwitchWitness",
            "fields": [
              {
                "id": 1,
                "name": "peer_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "is_witness",
                "type": "bool"
              }
            ]
          },
          {
            "name": "BatchSwitchWitness",
            "fields": [
              {
                "id": 1,
                "name": "switch_witnesses",
                "type": "SwitchWitness",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RegionHeartbeatResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "change_peer",
                "type": "ChangePeer"
              },
              {
                "id": 3,
                "name": "transfer_leader",
                "type": "TransferLeader"
              },
              {
                "id": 4,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 6,
                "name": "target_peer",
                "type": "metapb.Peer"
              },
              {
                "id": 7,
                "name": "merge",
                "type": "Merge"
              },
              {
                "id": 8,
                "name": "split_region",
                "type": "SplitRegion"
              },
              {
                "id": 9,
                "name": "change_peer_v2",
                "type": "ChangePeerV2"
              },
              {
                "id": 10,
                "name": "switch_witnesses",
                "type": "BatchSwitchWitness"
              }
            ]
          },
          {
            "name": "AskSplitRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "AskSplitResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "new_region_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "new_peer_ids",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReportSplitRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "left",
                "type": "metapb.Region"
              },
              {
                "id": 3,
                "name": "right",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "ReportSplitResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "AskBatchSplitRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 3,
                "name": "split_count",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "SplitID",
            "fields": [
              {
                "id": 1,
                "name": "new_region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "new_peer_ids",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AskBatchSplitResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "ids",
                "type": "SplitID",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReportBatchSplitRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "regions",
                "type": "metapb.Region",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReportBatchSplitResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "TimeInterval",
            "fields": [
              {
                "id": 1,
                "name": "start_timestamp",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "end_timestamp",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RecordPair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "PeerStat",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "read_keys",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "read_bytes",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "query_stats",
                "type": "QueryStats"
              },
              {
                "id": 5,
                "name": "written_keys",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "written_bytes",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "StoreStats",
            "fields": [
              {
                "id": 1,
                "name": "store_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "capacity",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "available",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "region_count",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "sending_snap_count",
                "type": "uint32"
              },
              {
                "id": 6,
                "name": "receiving_snap_count",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "start_time",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "applying_snap_count",
                "type": "uint32"
              },
              {
                "id": 9,
                "name": "is_busy",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "used_size",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "bytes_written",
                "type": "uint64"
              },
              {
                "id": 12,
                "name": "keys_written",
                "type": "uint64"
              },
              {
                "id": 13,
                "name": "bytes_read",
                "type": "uint64"
              },
              {
                "id": 14,
                "name": "keys_read",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "interval",
                "type": "TimeInterval"
              },
              {
                "id": 16,
                "name": "cpu_usages",
                "type": "RecordPair",
                "is_repeated": true
              },
              {
                "id": 17,
                "name": "read_io_rates",
                "type": "RecordPair",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "write_io_rates",
                "type": "RecordPair",
                "is_repeated": true
              },
              {
                "id": 19,
                "name": "op_latencies",
                "type": "RecordPair",
                "is_repeated": true
              },
              {
                "id": 20,
                "name": "peer_stats",
                "type": "PeerStat",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "query_stats",
                "type": "QueryStats"
              },
              {
                "id": 22,
                "name": "slow_score",
                "type": "uint64"
              },
              {
                "id": 23,
                "name": "damaged_regions_id",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "is_apply_busy",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "snapshot_stats",
                "type": "SnapshotStat",
                "is_repeated": true
              },
              {
                "id": 26,
                "name": "slow_trend",
                "type": "SlowTrend"
              }
            ]
          },
          {
            "name": "SlowTrend",
            "fields": [
              {
                "id": 1,
                "name": "cause_value",
                "type": "double"
              },
              {
                "id": 2,
                "name": "cause_rate",
                "type": "double"
              },
              {
                "id": 3,
                "name": "result_value",
                "type": "double"
              },
              {
                "id": 4,
                "name": "result_rate",
                "type": "double"
              }
            ]
          },
          {
            "name": "SnapshotStat",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "generate_duration_sec",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "send_duration_sec",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "total_duration_sec",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "transport_size",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "PeerReport",
            "fields": [
              {
                "id": 1,
                "name": "raft_state",
                "type": "raft_serverpb.RaftLocalState"
              },
              {
                "id": 2,
                "name": "region_state",
                "type": "raft_serverpb.RegionLocalState"
              },
              {
                "id": 3,
                "name": "is_force_leader",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "has_commit_merge",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StoreReport",
            "fields": [
              {
                "id": 1,
                "name": "peer_reports",
                "type": "PeerReport",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "step",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "StoreHeartbeatRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "stats",
                "type": "StoreStats"
              },
              {
                "id": 3,
                "name": "store_report",
                "type": "StoreReport"
              },
              {
                "id": 4,
                "name": "dr_autosync_status",
                "type": "replication_modepb.StoreDRAutoSyncStatus"
              }
            ]
          },
          {
            "name": "DemoteFailedVoters",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "failed_voters",
                "type": "metapb.Peer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ForceLeader",
            "fields": [
              {
                "id": 1,
                "name": "failed_stores",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "enter_force_leaders",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RecoveryPlan",
            "fields": [
              {
                "id": 1,
                "name": "creates",
                "type": "metapb.Region",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "updates",
                "type": "metapb.Region",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "tombstones",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "demotes",
                "type": "DemoteFailedVoters",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "force_leader",
                "type": "ForceLeader"
              },
              {
                "id": 6,
                "name": "step",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "AwakenRegions",
            "fields": [
              {
                "id": 1,
                "name": "abnormal_stores",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StoreHeartbeatResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "replication_status",
                "type": "replication_modepb.ReplicationStatus"
              },
              {
                "id": 3,
                "name": "cluster_version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "require_detailed_report",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "recovery_plan",
                "type": "RecoveryPlan"
              },
              {
                "id": 6,
                "name": "awaken_regions",
                "type": "AwakenRegions"
              }
            ]
          },
          {
            "name": "ScatterRegionRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region_id",
                "type": "uint64",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 4,
                "name": "leader",
                "type": "metapb.Peer"
              },
              {
                "id": 5,
                "name": "group",
                "type": "string"
              },
              {
                "id": 6,
                "name": "regions_id",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "retry_limit",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ScatterRegionResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "finished_percentage",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GetGCSafePointRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              }
            ]
          },
          {
            "name": "GetGCSafePointResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "UpdateGCSafePointRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "UpdateGCSafePointResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "new_safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "UpdateServiceGCSafePointRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "service_id",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "TTL",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "UpdateServiceGCSafePointResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "service_id",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "TTL",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "min_safe_point",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionStat",
            "fields": [
              {
                "id": 1,
                "name": "bytes_written",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "bytes_read",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "keys_written",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "keys_read",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SyncRegionRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "member",
                "type": "Member"
              },
              {
                "id": 3,
                "name": "start_index",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SyncRegionResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "regions",
                "type": "metapb.Region",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "start_index",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "region_stats",
                "type": "RegionStat",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "region_leaders",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "buckets",
                "type": "metapb.Buckets",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetOperatorRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "GetOperatorResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "desc",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "status",
                "type": "OperatorStatus"
              },
              {
                "id": 5,
                "name": "kind",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "SyncMaxTSRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "max_ts",
                "type": "Timestamp"
              },
              {
                "id": 3,
                "name": "skip_check",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SyncMaxTSResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "max_local_ts",
                "type": "Timestamp"
              },
              {
                "id": 3,
                "name": "synced_dcs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SplitRegionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "split_keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "retry_limit",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SplitRegionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "finished_percentage",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "regions_id",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SplitAndScatterRegionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "split_keys",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "group",
                "type": "string"
              },
              {
                "id": 4,
                "name": "retry_limit",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SplitAndScatterRegionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "split_finished_percentage",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "scatter_finished_percentage",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "regions_id",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDCLocationInfoRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "dc_location",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetDCLocationInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "suffix",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "max_ts",
                "type": "Timestamp"
              }
            ]
          },
          {
            "name": "QueryStats",
            "fields": [
              {
                "id": 1,
                "name": "GC",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "Get",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "Scan",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "Coprocessor",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "Delete",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "DeleteRange",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "Put",
                "type": "uint64"
              },
              {
                "id": 8,
                "name": "Prewrite",
                "type": "uint64"
              },
              {
                "id": 9,
                "name": "AcquirePessimisticLock",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "Commit",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "Rollback",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ReportBucketsRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 3,
                "name": "buckets",
                "type": "metapb.Buckets"
              }
            ]
          },
          {
            "name": "ReportBucketsResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "ReportMinResolvedTsRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "store_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "min_resolved_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ReportMinResolvedTsResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "SetExternalTimestampRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SetExternalTimestampResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              }
            ]
          },
          {
            "name": "GetExternalTimestampRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              }
            ]
          },
          {
            "name": "GetExternalTimestampResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "uint64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PD",
            "rpcs": [
              {
                "name": "GetClusterInfo",
                "in_type": "GetClusterInfoRequest",
                "out_type": "GetClusterInfoResponse"
              },
              {
                "name": "GetMembers",
                "in_type": "GetMembersRequest",
                "out_type": "GetMembersResponse"
              },
              {
                "name": "Tso",
                "in_type": "TsoRequest",
                "out_type": "TsoResponse",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "Bootstrap",
                "in_type": "BootstrapRequest",
                "out_type": "BootstrapResponse"
              },
              {
                "name": "IsBootstrapped",
                "in_type": "IsBootstrappedRequest",
                "out_type": "IsBootstrappedResponse"
              },
              {
                "name": "AllocID",
                "in_type": "AllocIDRequest",
                "out_type": "AllocIDResponse"
              },
              {
                "name": "IsSnapshotRecovering",
                "in_type": "IsSnapshotRecoveringRequest",
                "out_type": "IsSnapshotRecoveringResponse"
              },
              {
                "name": "GetStore",
                "in_type": "GetStoreRequest",
                "out_type": "GetStoreResponse"
              },
              {
                "name": "PutStore",
                "in_type": "PutStoreRequest",
                "out_type": "PutStoreResponse"
              },
              {
                "name": "GetAllStores",
                "in_type": "GetAllStoresRequest",
                "out_type": "GetAllStoresResponse"
              },
              {
                "name": "StoreHeartbeat",
                "in_type": "StoreHeartbeatRequest",
                "out_type": "StoreHeartbeatResponse"
              },
              {
                "name": "RegionHeartbeat",
                "in_type": "RegionHeartbeatRequest",
                "out_type": "RegionHeartbeatResponse",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "GetRegion",
                "in_type": "GetRegionRequest",
                "out_type": "GetRegionResponse"
              },
              {
                "name": "GetPrevRegion",
                "in_type": "GetRegionRequest",
                "out_type": "GetRegionResponse"
              },
              {
                "name": "GetRegionByID",
                "in_type": "GetRegionByIDRequest",
                "out_type": "GetRegionResponse"
              },
              {
                "name": "ScanRegions",
                "in_type": "ScanRegionsRequest",
                "out_type": "ScanRegionsResponse"
              },
              {
                "name": "AskSplit",
                "in_type": "AskSplitRequest",
                "out_type": "AskSplitResponse",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "ReportSplit",
                "in_type": "ReportSplitRequest",
                "out_type": "ReportSplitResponse",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "AskBatchSplit",
                "in_type": "AskBatchSplitRequest",
                "out_type": "AskBatchSplitResponse"
              },
              {
                "name": "ReportBatchSplit",
                "in_type": "ReportBatchSplitRequest",
                "out_type": "ReportBatchSplitResponse"
              },
              {
                "name": "GetClusterConfig",
                "in_type": "GetClusterConfigRequest",
                "out_type": "GetClusterConfigResponse"
              },
              {
                "name": "PutClusterConfig",
                "in_type": "PutClusterConfigRequest",
                "out_type": "PutClusterConfigResponse"
              },
              {
                "name": "ScatterRegion",
                "in_type": "ScatterRegionRequest",
                "out_type": "ScatterRegionResponse"
              },
              {
                "name": "GetGCSafePoint",
                "in_type": "GetGCSafePointRequest",
                "out_type": "GetGCSafePointResponse"
              },
              {
                "name": "UpdateGCSafePoint",
                "in_type": "UpdateGCSafePointRequest",
                "out_type": "UpdateGCSafePointResponse"
              },
              {
                "name": "UpdateServiceGCSafePoint",
                "in_type": "UpdateServiceGCSafePointRequest",
                "out_type": "UpdateServiceGCSafePointResponse"
              },
              {
                "name": "SyncRegions",
                "in_type": "SyncRegionRequest",
                "out_type": "SyncRegionResponse",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "GetOperator",
                "in_type": "GetOperatorRequest",
                "out_type": "GetOperatorResponse"
              },
              {
                "name": "SyncMaxTS",
                "in_type": "SyncMaxTSRequest",
                "out_type": "SyncMaxTSResponse"
              },
              {
                "name": "SplitRegions",
                "in_type": "SplitRegionsRequest",
                "out_type": "SplitRegionsResponse"
              },
              {
                "name": "SplitAndScatterRegions",
                "in_type": "SplitAndScatterRegionsRequest",
                "out_type": "SplitAndScatterRegionsResponse"
              },
              {
                "name": "GetDCLocationInfo",
                "in_type": "GetDCLocationInfoRequest",
                "out_type": "GetDCLocationInfoResponse"
              },
              {
                "name": "StoreGlobalConfig",
                "in_type": "StoreGlobalConfigRequest",
                "out_type": "StoreGlobalConfigResponse"
              },
              {
                "name": "LoadGlobalConfig",
                "in_type": "LoadGlobalConfigRequest",
                "out_type": "LoadGlobalConfigResponse"
              },
              {
                "name": "WatchGlobalConfig",
                "in_type": "WatchGlobalConfigRequest",
                "out_type": "WatchGlobalConfigResponse",
                "out_streamed": true
              },
              {
                "name": "ReportBuckets",
                "in_type": "ReportBucketsRequest",
                "out_type": "ReportBucketsResponse",
                "in_streamed": true
              },
              {
                "name": "ReportMinResolvedTS",
                "in_type": "ReportMinResolvedTsRequest",
                "out_type": "ReportMinResolvedTsResponse"
              },
              {
                "name": "SetExternalTimestamp",
                "in_type": "SetExternalTimestampRequest",
                "out_type": "SetExternalTimestampResponse"
              },
              {
                "name": "GetExternalTimestamp",
                "in_type": "GetExternalTimestampRequest",
                "out_type": "GetExternalTimestampResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "metapb.proto"
          },
          {
            "path": "eraftpb.proto"
          },
          {
            "path": "raft_serverpb.proto"
          },
          {
            "path": "replication_modepb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "pdpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "raft_cmdpb.proto",
      "def": {
        "enums": [
          {
            "name": "CmdType",
            "enum_fields": [
              {
                "name": "Invalid"
              },
              {
                "name": "Get",
                "integer": 1
              },
              {
                "name": "Put",
                "integer": 3
              },
              {
                "name": "Delete",
                "integer": 4
              },
              {
                "name": "Snap",
                "integer": 5
              },
              {
                "name": "Prewrite",
                "integer": 6
              },
              {
                "name": "DeleteRange",
                "integer": 7
              },
              {
                "name": "IngestSST",
                "integer": 8
              },
              {
                "name": "ReadIndex",
                "integer": 9
              }
            ]
          },
          {
            "name": "AdminCmdType",
            "enum_fields": [
              {
                "name": "InvalidAdmin"
              },
              {
                "name": "ChangePeer",
                "integer": 1
              },
              {
                "name": "Split",
                "integer": 2,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "CompactLog",
                "integer": 3
              },
              {
                "name": "TransferLeader",
                "integer": 4
              },
              {
                "name": "ComputeHash",
                "integer": 5
              },
              {
                "name": "VerifyHash",
                "integer": 6
              },
              {
                "name": "PrepareMerge",
                "integer": 7
              },
              {
                "name": "CommitMerge",
                "integer": 8
              },
              {
                "name": "RollbackMerge",
                "integer": 9
              },
              {
                "name": "BatchSplit",
                "integer": 10
              },
              {
                "name": "ChangePeerV2",
                "integer": 11
              },
              {
                "name": "PrepareFlashback",
                "integer": 12
              },
              {
                "name": "FinishFlashback",
                "integer": 13
              },
              {
                "name": "BatchSwitchWitness",
                "integer": 14
              },
              {
                "name": "UpdateGcPeer",
                "integer": 15
              }
            ]
          },
          {
            "name": "StatusCmdType",
            "enum_fields": [
              {
                "name": "InvalidStatus"
              },
              {
                "name": "RegionLeader",
                "integer": 1
              },
              {
                "name": "RegionDetail",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetRequest",
            "fields": [
              {
                "id": 1,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetResponse",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "PutRequest",
            "fields": [
              {
                "id": 1,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "PutResponse"
          },
          {
            "name": "DeleteRequest",
            "fields": [
              {
                "id": 1,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "DeleteResponse"
          },
          {
            "name": "DeleteRangeRequest",
            "fields": [
              {
                "id": 1,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 2,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "notify_only",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteRangeResponse"
          },
          {
            "name": "SnapRequest"
          },
          {
            "name": "SnapResponse",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "PrewriteRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "lock",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "PrewriteResponse"
          },
          {
            "name": "IngestSSTRequest",
            "fields": [
              {
                "id": 1,
                "name": "sst",
                "type": "import_sstpb.SSTMeta"
              }
            ]
          },
          {
            "name": "IngestSSTResponse"
          },
          {
            "name": "ReadIndexRequest",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "key_ranges",
                "type": "kvrpcpb.KeyRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReadIndexResponse",
            "fields": [
              {
                "id": 1,
                "name": "read_index",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "locked",
                "type": "kvrpcpb.LockInfo"
              }
            ]
          },
          {
            "name": "Request",
            "fields": [
              {
                "id": 1,
                "name": "cmd_type",
                "type": "CmdType"
              },
              {
                "id": 2,
                "name": "get",
                "type": "GetRequest"
              },
              {
                "id": 4,
                "name": "put",
                "type": "PutRequest"
              },
              {
                "id": 5,
                "name": "delete",
                "type": "DeleteRequest"
              },
              {
                "id": 6,
                "name": "snap",
                "type": "SnapRequest"
              },
              {
                "id": 7,
                "name": "prewrite",
                "type": "PrewriteRequest"
              },
              {
                "id": 8,
                "name": "delete_range",
                "type": "DeleteRangeRequest"
              },
              {
                "id": 9,
                "name": "ingest_sst",
                "type": "IngestSSTRequest"
              },
              {
                "id": 10,
                "name": "read_index",
                "type": "ReadIndexRequest"
              }
            ]
          },
          {
            "name": "Response",
            "fields": [
              {
                "id": 1,
                "name": "cmd_type",
                "type": "CmdType"
              },
              {
                "id": 2,
                "name": "get",
                "type": "GetResponse"
              },
              {
                "id": 4,
                "name": "put",
                "type": "PutResponse"
              },
              {
                "id": 5,
                "name": "delete",
                "type": "DeleteResponse"
              },
              {
                "id": 6,
                "name": "snap",
                "type": "SnapResponse"
              },
              {
                "id": 7,
                "name": "prewrite",
                "type": "PrewriteResponse"
              },
              {
                "id": 8,
                "name": "delte_range",
                "type": "DeleteRangeResponse"
              },
              {
                "id": 9,
                "name": "ingest_sst",
                "type": "IngestSSTResponse"
              },
              {
                "id": 10,
                "name": "read_index",
                "type": "ReadIndexResponse"
              }
            ]
          },
          {
            "name": "ChangePeerRequest",
            "fields": [
              {
                "id": 1,
                "name": "change_type",
                "type": "eraftpb.ConfChangeType"
              },
              {
                "id": 2,
                "name": "peer",
                "type": "metapb.Peer"
              }
            ]
          },
          {
            "name": "ChangePeerResponse",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "ChangePeerV2Request",
            "fields": [
              {
                "id": 1,
                "name": "changes",
                "type": "ChangePeerRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ChangePeerV2Response",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "SplitRequest",
            "fields": [
              {
                "id": 1,
                "name": "split_key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "new_region_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "new_peer_ids",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "right_derive",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "SplitResponse",
            "fields": [
              {
                "id": 1,
                "name": "left",
                "type": "metapb.Region"
              },
              {
                "id": 2,
                "name": "right",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "BatchSplitRequest",
            "fields": [
              {
                "id": 1,
                "name": "requests",
                "type": "SplitRequest",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "right_derive",
                "type": "bool"
              }
            ]
          },
          {
            "name": "BatchSplitResponse",
            "fields": [
              {
                "id": 1,
                "name": "regions",
                "type": "metapb.Region",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CompactLogRequest",
            "fields": [
              {
                "id": 1,
                "name": "compact_index",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "compact_term",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "voter_replicated_index",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CompactLogResponse"
          },
          {
            "name": "TransferLeaderRequest",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "metapb.Peer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TransferLeaderResponse"
          },
          {
            "name": "ComputeHashRequest",
            "fields": [
              {
                "id": 1,
                "name": "context",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "VerifyHashRequest",
            "fields": [
              {
                "id": 1,
                "name": "index",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "hash",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "context",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "VerifyHashResponse"
          },
          {
            "name": "PrepareMergeRequest",
            "fields": [
              {
                "id": 1,
                "name": "min_index",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "target",
                "type": "metapb.Region"
              }
            ]
          },
          {
            "name": "PrepareMergeResponse"
          },
          {
            "name": "PrepareFlashbackRequest",
            "fields": [
              {
                "id": 1,
                "name": "start_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "PrepareFlashbackResponse"
          },
          {
            "name": "FinishFlashbackRequest"
          },
          {
            "name": "FinishFlashbackResponse"
          },
          {
            "name": "CommitMergeRequest",
            "fields": [
              {
                "id": 1,
                "name": "source",
                "type": "metapb.Region"
              },
              {
                "id": 2,
                "name": "commit",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "entries",
                "type": "eraftpb.Entry",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "source_state",
                "type": "raft_serverpb.RegionLocalState"
              }
            ]
          },
          {
            "name": "CommitMergeResponse"
          },
          {
            "name": "RollbackMergeRequest",
            "fields": [
              {
                "id": 1,
                "name": "commit",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RollbackMergeResponse"
          },
          {
            "name": "SwitchWitnessRequest",
            "fields": [
              {
                "id": 1,
                "name": "peer_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "is_witness",
                "type": "bool"
              }
            ]
          },
          {
            "name": "BatchSwitchWitnessRequest",
            "fields": [
              {
                "id": 1,
                "name": "switch_witnesses",
                "type": "SwitchWitnessRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BatchSwitchWitnessResponse"
          },
          {
            "name": "UpdateGcPeerRequest",
            "fields": [
              {
                "id": 1,
                "name": "peer_id",
                "type": "uint64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdminRequest",
            "fields": [
              {
                "id": 1,
                "name": "cmd_type",
                "type": "AdminCmdType"
              },
              {
                "id": 2,
                "name": "change_peer",
                "type": "ChangePeerRequest"
              },
              {
                "id": 3,
                "name": "split",
                "type": "SplitRequest",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "compact_log",
                "type": "CompactLogRequest"
              },
              {
                "id": 5,
                "name": "transfer_leader",
                "type": "TransferLeaderRequest"
              },
              {
                "id": 6,
                "name": "verify_hash",
                "type": "VerifyHashRequest"
              },
              {
                "id": 7,
                "name": "prepare_merge",
                "type": "PrepareMergeRequest"
              },
              {
                "id": 8,
                "name": "commit_merge",
                "type": "CommitMergeRequest"
              },
              {
                "id": 9,
                "name": "rollback_merge",
                "type": "RollbackMergeRequest"
              },
              {
                "id": 10,
                "name": "splits",
                "type": "BatchSplitRequest"
              },
              {
                "id": 11,
                "name": "change_peer_v2",
                "type": "ChangePeerV2Request"
              },
              {
                "id": 12,
                "name": "compute_hash",
                "type": "ComputeHashRequest"
              },
              {
                "id": 13,
                "name": "prepare_flashback",
                "type": "PrepareFlashbackRequest"
              },
              {
                "id": 14,
                "name": "finish_flashback",
                "type": "FinishFlashbackRequest"
              },
              {
                "id": 15,
                "name": "switch_witnesses",
                "type": "BatchSwitchWitnessRequest"
              },
              {
                "id": 16,
                "name": "update_gc_peers",
                "type": "UpdateGcPeerRequest"
              }
            ]
          },
          {
            "name": "AdminResponse",
            "fields": [
              {
                "id": 1,
                "name": "cmd_type",
                "type": "AdminCmdType"
              },
              {
                "id": 2,
                "name": "change_peer",
                "type": "ChangePeerResponse"
              },
              {
                "id": 3,
                "name": "split",
                "type": "SplitResponse",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "compact_log",
                "type": "CompactLogResponse"
              },
              {
                "id": 5,
                "name": "transfer_leader",
                "type": "TransferLeaderResponse"
              },
              {
                "id": 6,
                "name": "verify_hash",
                "type": "VerifyHashResponse"
              },
              {
                "id": 7,
                "name": "prepare_merge",
                "type": "PrepareMergeResponse"
              },
              {
                "id": 8,
                "name": "commit_merge",
                "type": "CommitMergeResponse"
              },
              {
                "id": 9,
                "name": "rollback_merge",
                "type": "RollbackMergeResponse"
              },
              {
                "id": 10,
                "name": "splits",
                "type": "BatchSplitResponse"
              },
              {
                "id": 11,
                "name": "change_peer_v2",
                "type": "ChangePeerV2Response"
              },
              {
                "id": 12,
                "name": "prepare_flashback",
                "type": "PrepareFlashbackResponse"
              },
              {
                "id": 13,
                "name": "finish_flashback",
                "type": "FinishFlashbackResponse"
              },
              {
                "id": 14,
                "name": "switch_witnesses",
                "type": "BatchSwitchWitnessResponse"
              }
            ]
          },
          {
            "name": "RegionLeaderRequest"
          },
          {
            "name": "RegionLeaderResponse",
            "fields": [
              {
                "id": 1,
                "name": "leader",
                "type": "metapb.Peer"
              }
            ]
          },
          {
            "name": "RegionDetailRequest"
          },
          {
            "name": "RegionDetailResponse",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 2,
                "name": "leader",
                "type": "metapb.Peer"
              }
            ]
          },
          {
            "name": "StatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "cmd_type",
                "type": "StatusCmdType"
              },
              {
                "id": 2,
                "name": "region_leader",
                "type": "RegionLeaderRequest"
              },
              {
                "id": 3,
                "name": "region_detail",
                "type": "RegionDetailRequest"
              }
            ]
          },
          {
            "name": "StatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "cmd_type",
                "type": "StatusCmdType"
              },
              {
                "id": 2,
                "name": "region_leader",
                "type": "RegionLeaderResponse"
              },
              {
                "id": 3,
                "name": "region_detail",
                "type": "RegionDetailResponse"
              }
            ]
          },
          {
            "name": "RaftRequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "peer",
                "type": "metapb.Peer"
              },
              {
                "id": 3,
                "name": "read_quorum",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "uuid",
                "type": "bytes"
              },
              {
                "id": 5,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 6,
                "name": "term",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "sync_log",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "replica_read",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "applied_index",
                "type": "uint64"
              },
              {
                "id": 10,
                "name": "flags",
                "type": "uint64"
              },
              {
                "id": 11,
                "name": "flag_data",
                "type": "bytes"
              },
              {
                "id": 12,
                "name": "priority",
                "type": "kvrpcpb.CommandPri"
              },
              {
                "id": 13,
                "name": "resource_group_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "RaftResponseHeader",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "errorpb.Error"
              },
              {
                "id": 2,
                "name": "uuid",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "current_term",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RaftCmdRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RaftRequestHeader"
              },
              {
                "id": 2,
                "name": "requests",
                "type": "Request",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "admin_request",
                "type": "AdminRequest"
              },
              {
                "id": 4,
                "name": "status_request",
                "type": "StatusRequest"
              }
            ]
          },
          {
            "name": "RaftCmdResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RaftResponseHeader"
              },
              {
                "id": 2,
                "name": "responses",
                "type": "Response",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "admin_response",
                "type": "AdminResponse"
              },
              {
                "id": 4,
                "name": "status_response",
                "type": "StatusResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "metapb.proto"
          },
          {
            "path": "errorpb.proto"
          },
          {
            "path": "eraftpb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "import_sstpb.proto"
          },
          {
            "path": "raft_serverpb.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "raft_cmdpb"
        },
        "options": [
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "raft_serverpb.proto",
      "def": {
        "enums": [
          {
            "name": "PeerState",
            "enum_fields": [
              {
                "name": "Normal"
              },
              {
                "name": "Applying",
                "integer": 1
              },
              {
                "name": "Tombstone",
                "integer": 2
              },
              {
                "name": "Merging",
                "integer": 3
              },
              {
                "name": "Unavailable",
                "integer": 4
              }
            ]
          },
          {
            "name": "ExtraMessageType",
            "enum_fields": [
              {
                "name": "MsgRegionWakeUp"
              },
              {
                "name": "MsgWantRollbackMerge",
                "integer": 1
              },
              {
                "name": "MsgCheckStalePeer",
                "integer": 2
              },
              {
                "name": "MsgCheckStalePeerResponse",
                "integer": 3
              },
              {
                "name": "MsgHibernateRequest",
                "integer": 4
              },
              {
                "name": "MsgHibernateResponse",
                "integer": 5
              },
              {
                "name": "MsgRejectRaftLogCausedByMemoryUsage",
                "integer": 6
              },
              {
                "name": "MsgAvailabilityRequest",
                "integer": 7
              },
              {
                "name": "MsgAvailabilityResponse",
                "integer": 8
              },
              {
                "name": "MsgVoterReplicatedIndexRequest",
                "integer": 9
              },
              {
                "name": "MsgVoterReplicatedIndexResponse",
                "integer": 10
              },
              {
                "name": "MsgGcPeerRequest",
                "integer": 11
              },
              {
                "name": "MsgGcPeerResponse",
                "integer": 12
              },
              {
                "name": "MsgFlushMemtable",
                "integer": 13
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RaftMessage",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "from_peer",
                "type": "metapb.Peer"
              },
              {
                "id": 3,
                "name": "to_peer",
                "type": "metapb.Peer"
              },
              {
                "id": 4,
                "name": "message",
                "type": "eraftpb.Message"
              },
              {
                "id": 5,
                "name": "region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 6,
                "name": "is_tombstone",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "end_key",
                "type": "bytes"
              },
              {
                "id": 9,
                "name": "merge_target",
                "type": "metapb.Region"
              },
              {
                "id": 10,
                "name": "extra_msg",
                "type": "ExtraMessage"
              },
              {
                "id": 11,
                "name": "extra_ctx",
                "type": "bytes"
              },
              {
                "id": 12,
                "name": "disk_usage",
                "type": "disk_usage.DiskUsage"
              }
            ]
          },
          {
            "name": "RaftTruncatedState",
            "fields": [
              {
                "id": 1,
                "name": "index",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "term",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SnapshotCFFile",
            "fields": [
              {
                "id": 1,
                "name": "cf",
                "type": "string"
              },
              {
                "id": 2,
                "name": "size",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "checksum",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "SnapshotMeta",
            "fields": [
              {
                "id": 1,
                "name": "cf_files",
                "type": "SnapshotCFFile",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "for_balance",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "for_witness",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "start",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "generate_duration_sec",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "SnapshotChunk",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "RaftMessage"
              },
              {
                "id": 2,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Done"
          },
          {
            "name": "TabletSnapshotFileMeta",
            "fields": [
              {
                "id": 1,
                "name": "file_size",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "file_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "head_chunk",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "trailing_chunk",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TabletSnapshotPreview",
            "fields": [
              {
                "id": 1,
                "name": "metas",
                "type": "TabletSnapshotFileMeta",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "end",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TabletSnapshotFileChunk",
            "fields": [
              {
                "id": 1,
                "name": "file_size",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "file_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TabletSnapshotHead",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "RaftMessage"
              },
              {
                "id": 2,
                "name": "use_cache",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TabletSnapshotEnd",
            "fields": [
              {
                "id": 1,
                "name": "checksum",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TabletSnapshotRequest",
            "fields": [
              {
                "id": 1,
                "name": "head",
                "type": "TabletSnapshotHead"
              },
              {
                "id": 2,
                "name": "preview",
                "type": "TabletSnapshotPreview"
              },
              {
                "id": 3,
                "name": "chunk",
                "type": "TabletSnapshotFileChunk"
              },
              {
                "id": 4,
                "name": "end",
                "type": "TabletSnapshotEnd"
              }
            ]
          },
          {
            "name": "AcceptedSnapshotFiles",
            "fields": [
              {
                "id": 1,
                "name": "file_name",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TabletSnapshotResponse",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "AcceptedSnapshotFiles"
              }
            ]
          },
          {
            "name": "KeyValue",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RaftSnapshotData",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 2,
                "name": "file_size",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "data",
                "type": "KeyValue",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "meta",
                "type": "SnapshotMeta"
              },
              {
                "id": 6,
                "name": "removed_records",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "merged_records",
                "type": "MergedRecord",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StoreIdent",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "store_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "api_version",
                "type": "kvrpcpb.APIVersion"
              }
            ]
          },
          {
            "name": "StoreRecoverState",
            "fields": [
              {
                "id": 1,
                "name": "seqno",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RaftLocalState",
            "fields": [
              {
                "id": 1,
                "name": "hard_state",
                "type": "eraftpb.HardState"
              },
              {
                "id": 2,
                "name": "last_index",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RaftApplyState",
            "fields": [
              {
                "id": 1,
                "name": "applied_index",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "last_commit_index",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "commit_index",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "commit_term",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "truncated_state",
                "type": "RaftTruncatedState"
              }
            ]
          },
          {
            "name": "MergeState",
            "fields": [
              {
                "id": 1,
                "name": "min_index",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "target",
                "type": "metapb.Region"
              },
              {
                "id": 3,
                "name": "commit",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "MergedRecord",
            "fields": [
              {
                "id": 1,
                "name": "source_region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "source_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 3,
                "name": "source_peers",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "target_region_id",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "target_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 6,
                "name": "target_peers",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "index",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "RegionLocalState",
            "fields": [
              {
                "id": 1,
                "name": "state",
                "type": "PeerState"
              },
              {
                "id": 2,
                "name": "region",
                "type": "metapb.Region"
              },
              {
                "id": 3,
                "name": "merge_state",
                "type": "MergeState"
              },
              {
                "id": 4,
                "name": "tablet_index",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "removed_records",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "merged_records",
                "type": "MergedRecord",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RegionSequenceNumberRelation",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "sequence_number",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "apply_state",
                "type": "RaftApplyState"
              },
              {
                "id": 4,
                "name": "region_state",
                "type": "RegionLocalState"
              }
            ]
          },
          {
            "name": "FlushMemtable",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "CheckGcPeer",
            "fields": [
              {
                "id": 1,
                "name": "from_region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "check_region_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "check_region_epoch",
                "type": "metapb.RegionEpoch"
              },
              {
                "id": 4,
                "name": "check_peer",
                "type": "metapb.Peer"
              }
            ]
          },
          {
            "name": "ExtraMessage",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ExtraMessageType"
              },
              {
                "id": 2,
                "name": "index",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "check_peers",
                "type": "metapb.Peer",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "wait_data",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "forcely_awaken",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "check_gc_peer",
                "type": "CheckGcPeer"
              },
              {
                "id": 7,
                "name": "flush_memtable",
                "type": "FlushMemtable"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "eraftpb.proto"
          },
          {
            "path": "metapb.proto"
          },
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "disk_usage.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "raft_serverpb"
        },
        "options": [
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "recoverdatapb.proto",
      "def": {
        "messages": [
          {
            "name": "ReadRegionMetaRequest",
            "fields": [
              {
                "id": 1,
                "name": "store_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "msg",
                "type": "string"
              }
            ]
          },
          {
            "name": "RegionMeta",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "peer_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "last_log_term",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "last_index",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "commit_index",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "version",
                "type": "uint64"
              },
              {
                "id": 7,
                "name": "tombstone",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "start_key",
                "type": "bytes"
              },
              {
                "id": 9,
                "name": "end_key",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "RecoverRegionRequest",
            "fields": [
              {
                "id": 1,
                "name": "region_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "as_leader",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "tombstone",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RecoverRegionResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "store_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "WaitApplyRequest",
            "fields": [
              {
                "id": 1,
                "name": "store_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "WaitApplyResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              }
            ]
          },
          {
            "name": "ResolveKvDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "resolved_ts",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ResolveKvDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "store_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "resolved_key_count",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "current_commit_ts",
                "type": "uint64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "RecoverData",
            "rpcs": [
              {
                "name": "ReadRegionMeta",
                "in_type": "ReadRegionMetaRequest",
                "out_type": "RegionMeta",
                "out_streamed": true
              },
              {
                "name": "RecoverRegion",
                "in_type": "RecoverRegionRequest",
                "out_type": "RecoverRegionResponse",
                "in_streamed": true
              },
              {
                "name": "WaitApply",
                "in_type": "WaitApplyRequest",
                "out_type": "WaitApplyResponse"
              },
              {
                "name": "ResolveKvData",
                "in_type": "ResolveKvDataRequest",
                "out_type": "ResolveKvDataResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "recover_data"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "replication_modepb.proto",
      "def": {
        "enums": [
          {
            "name": "ReplicationMode",
            "enum_fields": [
              {
                "name": "MAJORITY"
              },
              {
                "name": "DR_AUTO_SYNC",
                "integer": 1
              }
            ]
          },
          {
            "name": "DRAutoSyncState",
            "enum_fields": [
              {
                "name": "SYNC"
              },
              {
                "name": "ASYNC_WAIT",
                "integer": 1
              },
              {
                "name": "ASYNC",
                "integer": 2
              },
              {
                "name": "SYNC_RECOVER",
                "integer": 3
              }
            ]
          },
          {
            "name": "RegionReplicationState",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "SIMPLE_MAJORITY",
                "integer": 1
              },
              {
                "name": "INTEGRITY_OVER_LABEL",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReplicationStatus",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "ReplicationMode"
              },
              {
                "id": 2,
                "name": "dr_auto_sync",
                "type": "DRAutoSync"
              }
            ]
          },
          {
            "name": "DRAutoSync",
            "fields": [
              {
                "id": 1,
                "name": "label_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "state",
                "type": "DRAutoSyncState"
              },
              {
                "id": 3,
                "name": "state_id",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "wait_sync_timeout_hint",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "available_stores",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "pause_region_split",
                "type": "bool"
              }
            ]
          },
          {
            "name": "RegionReplicationStatus",
            "fields": [
              {
                "id": 1,
                "name": "state",
                "type": "RegionReplicationState"
              },
              {
                "id": 2,
                "name": "state_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "StoreDRAutoSyncStatus",
            "fields": [
              {
                "id": 1,
                "name": "state",
                "type": "DRAutoSyncState"
              },
              {
                "id": 2,
                "name": "state_id",
                "type": "uint64"
              }
            ]
          }
        ],
        "package": {
          "name": "replication_modepb"
        }
      }
    },
    {
      "protopath": "resource_manager.proto",
      "def": {
        "enums": [
          {
            "name": "RequestUnitType",
            "enum_fields": [
              {
                "name": "RU"
              }
            ]
          },
          {
            "name": "RawResourceType",
            "enum_fields": [
              {
                "name": "CPU"
              },
              {
                "name": "IOReadFlow",
                "integer": 1
              },
              {
                "name": "IOWriteFlow",
                "integer": 2
              }
            ]
          },
          {
            "name": "GroupMode",
            "enum_fields": [
              {
                "name": "Unknown"
              },
              {
                "name": "RUMode",
                "integer": 1
              },
              {
                "name": "RawMode",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ListResourceGroupsRequest"
          },
          {
            "name": "ListResourceGroupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "groups",
                "type": "ResourceGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetResourceGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "resource_group_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetResourceGroupResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "group",
                "type": "ResourceGroup"
              }
            ]
          },
          {
            "name": "DeleteResourceGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "resource_group_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteResourceGroupResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "body",
                "type": "string"
              }
            ]
          },
          {
            "name": "PutResourceGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "ResourceGroup"
              }
            ]
          },
          {
            "name": "PutResourceGroupResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "body",
                "type": "string"
              }
            ]
          },
          {
            "name": "TokenBucketsRequest",
            "fields": [
              {
                "id": 1,
                "name": "requests",
                "type": "TokenBucketRequest",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "target_request_period_ms",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "client_unique_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TokenBucketRequest",
            "fields": [
              {
                "id": 1,
                "name": "resource_group_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ru_items",
                "type": "RequestRU"
              },
              {
                "id": 3,
                "name": "raw_resource_items",
                "type": "RequestRawResource"
              },
              {
                "id": 4,
                "name": "consumption_since_last_request",
                "type": "Consumption"
              }
            ],
            "messages": [
              {
                "name": "RequestRU",
                "fields": [
                  {
                    "id": 1,
                    "name": "request_r_u",
                    "type": "RequestUnitItem",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "RequestRawResource",
                "fields": [
                  {
                    "id": 1,
                    "name": "request_raw_resource",
                    "type": "RawResourceItem",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "TokenBucketsResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 2,
                "name": "responses",
                "type": "TokenBucketResponse",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TokenBucketResponse",
            "fields": [
              {
                "id": 1,
                "name": "resource_group_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "granted_r_u_tokens",
                "type": "GrantedRUTokenBucket",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "granted_resource_tokens",
                "type": "GrantedRawResourceTokenBucket",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GrantedRUTokenBucket",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "RequestUnitType"
              },
              {
                "id": 2,
                "name": "granted_tokens",
                "type": "TokenBucket"
              },
              {
                "id": 3,
                "name": "trickle_time_ms",
                "type": "int64"
              }
            ]
          },
          {
            "name": "GrantedRawResourceTokenBucket",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "RawResourceType"
              },
              {
                "id": 2,
                "name": "granted_tokens",
                "type": "TokenBucket"
              },
              {
                "id": 3,
                "name": "trickle_time_ms",
                "type": "int64"
              }
            ]
          },
          {
            "name": "Consumption",
            "fields": [
              {
                "id": 1,
                "name": "r_r_u",
                "type": "double"
              },
              {
                "id": 2,
                "name": "w_r_u",
                "type": "double"
              },
              {
                "id": 3,
                "name": "read_bytes",
                "type": "double"
              },
              {
                "id": 4,
                "name": "write_bytes",
                "type": "double"
              },
              {
                "id": 5,
                "name": "total_cpu_time_ms",
                "type": "double"
              },
              {
                "id": 6,
                "name": "sql_layer_cpu_time_ms",
                "type": "double"
              },
              {
                "id": 7,
                "name": "kv_read_rpc_count",
                "type": "double"
              },
              {
                "id": 8,
                "name": "kv_write_rpc_count",
                "type": "double"
              }
            ]
          },
          {
            "name": "RequestUnitItem",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "RequestUnitType"
              },
              {
                "id": 2,
                "name": "value",
                "type": "double"
              }
            ]
          },
          {
            "name": "RawResourceItem",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "RawResourceType"
              },
              {
                "id": 2,
                "name": "value",
                "type": "double"
              }
            ]
          },
          {
            "name": "ResourceGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mode",
                "type": "GroupMode"
              },
              {
                "id": 3,
                "name": "r_u_settings",
                "type": "GroupRequestUnitSettings"
              },
              {
                "id": 4,
                "name": "raw_resource_settings",
                "type": "GroupRawResourceSettings"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "GroupRequestUnitSettings",
            "fields": [
              {
                "id": 1,
                "name": "r_u",
                "type": "TokenBucket"
              }
            ]
          },
          {
            "name": "GroupRawResourceSettings",
            "fields": [
              {
                "id": 1,
                "name": "cpu",
                "type": "TokenBucket"
              },
              {
                "id": 2,
                "name": "io_read",
                "type": "TokenBucket"
              },
              {
                "id": 3,
                "name": "io_write",
                "type": "TokenBucket"
              }
            ]
          },
          {
            "name": "TokenBucket",
            "fields": [
              {
                "id": 1,
                "name": "settings",
                "type": "TokenLimitSettings"
              },
              {
                "id": 2,
                "name": "tokens",
                "type": "double"
              }
            ]
          },
          {
            "name": "TokenLimitSettings",
            "fields": [
              {
                "id": 1,
                "name": "fill_rate",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "burst_limit",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "max_tokens",
                "type": "double"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ResourceManager",
            "rpcs": [
              {
                "name": "ListResourceGroups",
                "in_type": "ListResourceGroupsRequest",
                "out_type": "ListResourceGroupsResponse"
              },
              {
                "name": "GetResourceGroup",
                "in_type": "GetResourceGroupRequest",
                "out_type": "GetResourceGroupResponse"
              },
              {
                "name": "AddResourceGroup",
                "in_type": "PutResourceGroupRequest",
                "out_type": "PutResourceGroupResponse"
              },
              {
                "name": "ModifyResourceGroup",
                "in_type": "PutResourceGroupRequest",
                "out_type": "PutResourceGroupResponse"
              },
              {
                "name": "DeleteResourceGroup",
                "in_type": "DeleteResourceGroupRequest",
                "out_type": "DeleteResourceGroupResponse"
              },
              {
                "name": "AcquireTokenBuckets",
                "in_type": "TokenBucketsRequest",
                "out_type": "TokenBucketsResponse",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "resource_manager"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "resource_usage_agent.proto",
      "def": {
        "messages": [
          {
            "name": "ResourceMeteringRequest"
          },
          {
            "name": "EmptyResponse"
          },
          {
            "name": "ResourceUsageRecord",
            "fields": [
              {
                "id": 1,
                "name": "record",
                "type": "GroupTagRecord"
              }
            ]
          },
          {
            "name": "GroupTagRecord",
            "fields": [
              {
                "id": 1,
                "name": "resource_group_tag",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "items",
                "type": "GroupTagRecordItem",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupTagRecordItem",
            "fields": [
              {
                "id": 1,
                "name": "timestamp_sec",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "cpu_time_ms",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "read_keys",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "write_keys",
                "type": "uint32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ResourceUsageAgent",
            "rpcs": [
              {
                "name": "Report",
                "in_type": "ResourceUsageRecord",
                "out_type": "EmptyResponse",
                "in_streamed": true
              }
            ]
          },
          {
            "name": "ResourceMeteringPubSub",
            "rpcs": [
              {
                "name": "Subscribe",
                "in_type": "ResourceMeteringRequest",
                "out_type": "ResourceUsageRecord",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "resource_usage_agent"
        },
        "options": [
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "tikvpb.proto",
      "def": {
        "messages": [
          {
            "name": "BatchCommandsRequest",
            "fields": [
              {
                "id": 1,
                "name": "requests",
                "type": "Request",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "request_ids",
                "type": "uint64",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "Get",
                    "type": "kvrpcpb.GetRequest"
                  },
                  {
                    "id": 2,
                    "name": "Scan",
                    "type": "kvrpcpb.ScanRequest"
                  },
                  {
                    "id": 3,
                    "name": "Prewrite",
                    "type": "kvrpcpb.PrewriteRequest"
                  },
                  {
                    "id": 4,
                    "name": "Commit",
                    "type": "kvrpcpb.CommitRequest"
                  },
                  {
                    "id": 5,
                    "name": "Import",
                    "type": "kvrpcpb.ImportRequest"
                  },
                  {
                    "id": 6,
                    "name": "Cleanup",
                    "type": "kvrpcpb.CleanupRequest"
                  },
                  {
                    "id": 7,
                    "name": "BatchGet",
                    "type": "kvrpcpb.BatchGetRequest"
                  },
                  {
                    "id": 8,
                    "name": "BatchRollback",
                    "type": "kvrpcpb.BatchRollbackRequest"
                  },
                  {
                    "id": 9,
                    "name": "ScanLock",
                    "type": "kvrpcpb.ScanLockRequest"
                  },
                  {
                    "id": 10,
                    "name": "ResolveLock",
                    "type": "kvrpcpb.ResolveLockRequest"
                  },
                  {
                    "id": 11,
                    "name": "GC",
                    "type": "kvrpcpb.GCRequest"
                  },
                  {
                    "id": 12,
                    "name": "DeleteRange",
                    "type": "kvrpcpb.DeleteRangeRequest"
                  },
                  {
                    "id": 13,
                    "name": "RawGet",
                    "type": "kvrpcpb.RawGetRequest"
                  },
                  {
                    "id": 14,
                    "name": "RawBatchGet",
                    "type": "kvrpcpb.RawBatchGetRequest"
                  },
                  {
                    "id": 15,
                    "name": "RawPut",
                    "type": "kvrpcpb.RawPutRequest"
                  },
                  {
                    "id": 16,
                    "name": "RawBatchPut",
                    "type": "kvrpcpb.RawBatchPutRequest"
                  },
                  {
                    "id": 17,
                    "name": "RawDelete",
                    "type": "kvrpcpb.RawDeleteRequest"
                  },
                  {
                    "id": 18,
                    "name": "RawBatchDelete",
                    "type": "kvrpcpb.RawBatchDeleteRequest"
                  },
                  {
                    "id": 19,
                    "name": "RawScan",
                    "type": "kvrpcpb.RawScanRequest"
                  },
                  {
                    "id": 20,
                    "name": "RawDeleteRange",
                    "type": "kvrpcpb.RawDeleteRangeRequest"
                  },
                  {
                    "id": 21,
                    "name": "RawBatchScan",
                    "type": "kvrpcpb.RawBatchScanRequest"
                  },
                  {
                    "id": 22,
                    "name": "Coprocessor",
                    "type": "coprocessor.Request"
                  },
                  {
                    "id": 23,
                    "name": "PessimisticLock",
                    "type": "kvrpcpb.PessimisticLockRequest"
                  },
                  {
                    "id": 24,
                    "name": "PessimisticRollback",
                    "type": "kvrpcpb.PessimisticRollbackRequest"
                  },
                  {
                    "id": 25,
                    "name": "CheckTxnStatus",
                    "type": "kvrpcpb.CheckTxnStatusRequest"
                  },
                  {
                    "id": 26,
                    "name": "TxnHeartBeat",
                    "type": "kvrpcpb.TxnHeartBeatRequest"
                  },
                  {
                    "id": 33,
                    "name": "CheckSecondaryLocks",
                    "type": "kvrpcpb.CheckSecondaryLocksRequest"
                  },
                  {
                    "id": 34,
                    "name": "RawCoprocessor",
                    "type": "kvrpcpb.RawCoprocessorRequest"
                  },
                  {
                    "id": 35,
                    "name": "FlashbackToVersion",
                    "type": "kvrpcpb.FlashbackToVersionRequest"
                  },
                  {
                    "id": 36,
                    "name": "PrepareFlashbackToVersion",
                    "type": "kvrpcpb.PrepareFlashbackToVersionRequest"
                  },
                  {
                    "id": 255,
                    "name": "Empty",
                    "type": "BatchCommandsEmptyRequest"
                  }
                ],
                "reserved_ids": [
                  27,
                  28,
                  29,
                  30,
                  31,
                  32
                ]
              }
            ]
          },
          {
            "name": "BatchCommandsResponse",
            "fields": [
              {
                "id": 1,
                "name": "responses",
                "type": "Response",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "request_ids",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "transport_layer_load",
                "type": "uint64"
              }
            ],
            "messages": [
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "Get",
                    "type": "kvrpcpb.GetResponse"
                  },
                  {
                    "id": 2,
                    "name": "Scan",
                    "type": "kvrpcpb.ScanResponse"
                  },
                  {
                    "id": 3,
                    "name": "Prewrite",
                    "type": "kvrpcpb.PrewriteResponse"
                  },
                  {
                    "id": 4,
                    "name": "Commit",
                    "type": "kvrpcpb.CommitResponse"
                  },
                  {
                    "id": 5,
                    "name": "Import",
                    "type": "kvrpcpb.ImportResponse"
                  },
                  {
                    "id": 6,
                    "name": "Cleanup",
                    "type": "kvrpcpb.CleanupResponse"
                  },
                  {
                    "id": 7,
                    "name": "BatchGet",
                    "type": "kvrpcpb.BatchGetResponse"
                  },
                  {
                    "id": 8,
                    "name": "BatchRollback",
                    "type": "kvrpcpb.BatchRollbackResponse"
                  },
                  {
                    "id": 9,
                    "name": "ScanLock",
                    "type": "kvrpcpb.ScanLockResponse"
                  },
                  {
                    "id": 10,
                    "name": "ResolveLock",
                    "type": "kvrpcpb.ResolveLockResponse"
                  },
                  {
                    "id": 11,
                    "name": "GC",
                    "type": "kvrpcpb.GCResponse"
                  },
                  {
                    "id": 12,
                    "name": "DeleteRange",
                    "type": "kvrpcpb.DeleteRangeResponse"
                  },
                  {
                    "id": 13,
                    "name": "RawGet",
                    "type": "kvrpcpb.RawGetResponse"
                  },
                  {
                    "id": 14,
                    "name": "RawBatchGet",
                    "type": "kvrpcpb.RawBatchGetResponse"
                  },
                  {
                    "id": 15,
                    "name": "RawPut",
                    "type": "kvrpcpb.RawPutResponse"
                  },
                  {
                    "id": 16,
                    "name": "RawBatchPut",
                    "type": "kvrpcpb.RawBatchPutResponse"
                  },
                  {
                    "id": 17,
                    "name": "RawDelete",
                    "type": "kvrpcpb.RawDeleteResponse"
                  },
                  {
                    "id": 18,
                    "name": "RawBatchDelete",
                    "type": "kvrpcpb.RawBatchDeleteResponse"
                  },
                  {
                    "id": 19,
                    "name": "RawScan",
                    "type": "kvrpcpb.RawScanResponse"
                  },
                  {
                    "id": 20,
                    "name": "RawDeleteRange",
                    "type": "kvrpcpb.RawDeleteRangeResponse"
                  },
                  {
                    "id": 21,
                    "name": "RawBatchScan",
                    "type": "kvrpcpb.RawBatchScanResponse"
                  },
                  {
                    "id": 22,
                    "name": "Coprocessor",
                    "type": "coprocessor.Response"
                  },
                  {
                    "id": 23,
                    "name": "PessimisticLock",
                    "type": "kvrpcpb.PessimisticLockResponse"
                  },
                  {
                    "id": 24,
                    "name": "PessimisticRollback",
                    "type": "kvrpcpb.PessimisticRollbackResponse"
                  },
                  {
                    "id": 25,
                    "name": "CheckTxnStatus",
                    "type": "kvrpcpb.CheckTxnStatusResponse"
                  },
                  {
                    "id": 26,
                    "name": "TxnHeartBeat",
                    "type": "kvrpcpb.TxnHeartBeatResponse"
                  },
                  {
                    "id": 33,
                    "name": "CheckSecondaryLocks",
                    "type": "kvrpcpb.CheckSecondaryLocksResponse"
                  },
                  {
                    "id": 34,
                    "name": "RawCoprocessor",
                    "type": "kvrpcpb.RawCoprocessorResponse"
                  },
                  {
                    "id": 35,
                    "name": "FlashbackToVersion",
                    "type": "kvrpcpb.FlashbackToVersionResponse"
                  },
                  {
                    "id": 36,
                    "name": "PrepareFlashbackToVersion",
                    "type": "kvrpcpb.PrepareFlashbackToVersionResponse"
                  },
                  {
                    "id": 255,
                    "name": "Empty",
                    "type": "BatchCommandsEmptyResponse"
                  }
                ],
                "reserved_ids": [
                  27,
                  28,
                  29,
                  30,
                  31,
                  32
                ]
              }
            ]
          },
          {
            "name": "BatchRaftMessage",
            "fields": [
              {
                "id": 1,
                "name": "msgs",
                "type": "raft_serverpb.RaftMessage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BatchCommandsEmptyRequest",
            "fields": [
              {
                "id": 1,
                "name": "test_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "delay_time",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "BatchCommandsEmptyResponse",
            "fields": [
              {
                "id": 1,
                "name": "test_id",
                "type": "uint64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Tikv",
            "rpcs": [
              {
                "name": "KvGet",
                "in_type": "kvrpcpb.GetRequest",
                "out_type": "kvrpcpb.GetResponse"
              },
              {
                "name": "KvScan",
                "in_type": "kvrpcpb.ScanRequest",
                "out_type": "kvrpcpb.ScanResponse"
              },
              {
                "name": "KvPrewrite",
                "in_type": "kvrpcpb.PrewriteRequest",
                "out_type": "kvrpcpb.PrewriteResponse"
              },
              {
                "name": "KvPessimisticLock",
                "in_type": "kvrpcpb.PessimisticLockRequest",
                "out_type": "kvrpcpb.PessimisticLockResponse"
              },
              {
                "name": "KVPessimisticRollback",
                "in_type": "kvrpcpb.PessimisticRollbackRequest",
                "out_type": "kvrpcpb.PessimisticRollbackResponse"
              },
              {
                "name": "KvTxnHeartBeat",
                "in_type": "kvrpcpb.TxnHeartBeatRequest",
                "out_type": "kvrpcpb.TxnHeartBeatResponse"
              },
              {
                "name": "KvCheckTxnStatus",
                "in_type": "kvrpcpb.CheckTxnStatusRequest",
                "out_type": "kvrpcpb.CheckTxnStatusResponse"
              },
              {
                "name": "KvCheckSecondaryLocks",
                "in_type": "kvrpcpb.CheckSecondaryLocksRequest",
                "out_type": "kvrpcpb.CheckSecondaryLocksResponse"
              },
              {
                "name": "KvCommit",
                "in_type": "kvrpcpb.CommitRequest",
                "out_type": "kvrpcpb.CommitResponse"
              },
              {
                "name": "KvImport",
                "in_type": "kvrpcpb.ImportRequest",
                "out_type": "kvrpcpb.ImportResponse"
              },
              {
                "name": "KvCleanup",
                "in_type": "kvrpcpb.CleanupRequest",
                "out_type": "kvrpcpb.CleanupResponse"
              },
              {
                "name": "KvBatchGet",
                "in_type": "kvrpcpb.BatchGetRequest",
                "out_type": "kvrpcpb.BatchGetResponse"
              },
              {
                "name": "KvBatchRollback",
                "in_type": "kvrpcpb.BatchRollbackRequest",
                "out_type": "kvrpcpb.BatchRollbackResponse"
              },
              {
                "name": "KvScanLock",
                "in_type": "kvrpcpb.ScanLockRequest",
                "out_type": "kvrpcpb.ScanLockResponse"
              },
              {
                "name": "KvResolveLock",
                "in_type": "kvrpcpb.ResolveLockRequest",
                "out_type": "kvrpcpb.ResolveLockResponse"
              },
              {
                "name": "KvGC",
                "in_type": "kvrpcpb.GCRequest",
                "out_type": "kvrpcpb.GCResponse"
              },
              {
                "name": "KvDeleteRange",
                "in_type": "kvrpcpb.DeleteRangeRequest",
                "out_type": "kvrpcpb.DeleteRangeResponse"
              },
              {
                "name": "KvPrepareFlashbackToVersion",
                "in_type": "kvrpcpb.PrepareFlashbackToVersionRequest",
                "out_type": "kvrpcpb.PrepareFlashbackToVersionResponse"
              },
              {
                "name": "KvFlashbackToVersion",
                "in_type": "kvrpcpb.FlashbackToVersionRequest",
                "out_type": "kvrpcpb.FlashbackToVersionResponse"
              },
              {
                "name": "RawGet",
                "in_type": "kvrpcpb.RawGetRequest",
                "out_type": "kvrpcpb.RawGetResponse"
              },
              {
                "name": "RawBatchGet",
                "in_type": "kvrpcpb.RawBatchGetRequest",
                "out_type": "kvrpcpb.RawBatchGetResponse"
              },
              {
                "name": "RawPut",
                "in_type": "kvrpcpb.RawPutRequest",
                "out_type": "kvrpcpb.RawPutResponse"
              },
              {
                "name": "RawBatchPut",
                "in_type": "kvrpcpb.RawBatchPutRequest",
                "out_type": "kvrpcpb.RawBatchPutResponse"
              },
              {
                "name": "RawDelete",
                "in_type": "kvrpcpb.RawDeleteRequest",
                "out_type": "kvrpcpb.RawDeleteResponse"
              },
              {
                "name": "RawBatchDelete",
                "in_type": "kvrpcpb.RawBatchDeleteRequest",
                "out_type": "kvrpcpb.RawBatchDeleteResponse"
              },
              {
                "name": "RawScan",
                "in_type": "kvrpcpb.RawScanRequest",
                "out_type": "kvrpcpb.RawScanResponse"
              },
              {
                "name": "RawDeleteRange",
                "in_type": "kvrpcpb.RawDeleteRangeRequest",
                "out_type": "kvrpcpb.RawDeleteRangeResponse"
              },
              {
                "name": "RawBatchScan",
                "in_type": "kvrpcpb.RawBatchScanRequest",
                "out_type": "kvrpcpb.RawBatchScanResponse"
              },
              {
                "name": "RawGetKeyTTL",
                "in_type": "kvrpcpb.RawGetKeyTTLRequest",
                "out_type": "kvrpcpb.RawGetKeyTTLResponse"
              },
              {
                "name": "RawCompareAndSwap",
                "in_type": "kvrpcpb.RawCASRequest",
                "out_type": "kvrpcpb.RawCASResponse"
              },
              {
                "name": "RawChecksum",
                "in_type": "kvrpcpb.RawChecksumRequest",
                "out_type": "kvrpcpb.RawChecksumResponse"
              },
              {
                "name": "UnsafeDestroyRange",
                "in_type": "kvrpcpb.UnsafeDestroyRangeRequest",
                "out_type": "kvrpcpb.UnsafeDestroyRangeResponse"
              },
              {
                "name": "RegisterLockObserver",
                "in_type": "kvrpcpb.RegisterLockObserverRequest",
                "out_type": "kvrpcpb.RegisterLockObserverResponse"
              },
              {
                "name": "CheckLockObserver",
                "in_type": "kvrpcpb.CheckLockObserverRequest",
                "out_type": "kvrpcpb.CheckLockObserverResponse"
              },
              {
                "name": "RemoveLockObserver",
                "in_type": "kvrpcpb.RemoveLockObserverRequest",
                "out_type": "kvrpcpb.RemoveLockObserverResponse"
              },
              {
                "name": "PhysicalScanLock",
                "in_type": "kvrpcpb.PhysicalScanLockRequest",
                "out_type": "kvrpcpb.PhysicalScanLockResponse"
              },
              {
                "name": "Coprocessor",
                "in_type": "coprocessor.Request",
                "out_type": "coprocessor.Response"
              },
              {
                "name": "CoprocessorStream",
                "in_type": "coprocessor.Request",
                "out_type": "coprocessor.Response",
                "out_streamed": true
              },
              {
                "name": "BatchCoprocessor",
                "in_type": "coprocessor.BatchRequest",
                "out_type": "coprocessor.BatchResponse",
                "out_streamed": true
              },
              {
                "name": "RawCoprocessor",
                "in_type": "kvrpcpb.RawCoprocessorRequest",
                "out_type": "kvrpcpb.RawCoprocessorResponse"
              },
              {
                "name": "Raft",
                "in_type": "raft_serverpb.RaftMessage",
                "out_type": "raft_serverpb.Done",
                "in_streamed": true
              },
              {
                "name": "BatchRaft",
                "in_type": "BatchRaftMessage",
                "out_type": "raft_serverpb.Done",
                "in_streamed": true
              },
              {
                "name": "Snapshot",
                "in_type": "raft_serverpb.SnapshotChunk",
                "out_type": "raft_serverpb.Done",
                "in_streamed": true
              },
              {
                "name": "TabletSnapshot",
                "in_type": "raft_serverpb.TabletSnapshotRequest",
                "out_type": "raft_serverpb.TabletSnapshotResponse",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "SplitRegion",
                "in_type": "kvrpcpb.SplitRegionRequest",
                "out_type": "kvrpcpb.SplitRegionResponse"
              },
              {
                "name": "ReadIndex",
                "in_type": "kvrpcpb.ReadIndexRequest",
                "out_type": "kvrpcpb.ReadIndexResponse"
              },
              {
                "name": "MvccGetByKey",
                "in_type": "kvrpcpb.MvccGetByKeyRequest",
                "out_type": "kvrpcpb.MvccGetByKeyResponse"
              },
              {
                "name": "MvccGetByStartTs",
                "in_type": "kvrpcpb.MvccGetByStartTsRequest",
                "out_type": "kvrpcpb.MvccGetByStartTsResponse"
              },
              {
                "name": "BatchCommands",
                "in_type": "BatchCommandsRequest",
                "out_type": "BatchCommandsResponse",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "DispatchMPPTask",
                "in_type": "mpp.DispatchTaskRequest",
                "out_type": "mpp.DispatchTaskResponse"
              },
              {
                "name": "CancelMPPTask",
                "in_type": "mpp.CancelTaskRequest",
                "out_type": "mpp.CancelTaskResponse"
              },
              {
                "name": "EstablishMPPConnection",
                "in_type": "mpp.EstablishMPPConnectionRequest",
                "out_type": "mpp.MPPDataPacket",
                "out_streamed": true
              },
              {
                "name": "IsAlive",
                "in_type": "mpp.IsAliveRequest",
                "out_type": "mpp.IsAliveResponse"
              },
              {
                "name": "CheckLeader",
                "in_type": "kvrpcpb.CheckLeaderRequest",
                "out_type": "kvrpcpb.CheckLeaderResponse"
              },
              {
                "name": "GetStoreSafeTS",
                "in_type": "kvrpcpb.StoreSafeTSRequest",
                "out_type": "kvrpcpb.StoreSafeTSResponse"
              },
              {
                "name": "GetLockWaitInfo",
                "in_type": "kvrpcpb.GetLockWaitInfoRequest",
                "out_type": "kvrpcpb.GetLockWaitInfoResponse"
              },
              {
                "name": "Compact",
                "in_type": "kvrpcpb.CompactRequest",
                "out_type": "kvrpcpb.CompactResponse"
              },
              {
                "name": "GetLockWaitHistory",
                "in_type": "kvrpcpb.GetLockWaitHistoryRequest",
                "out_type": "kvrpcpb.GetLockWaitHistoryResponse"
              },
              {
                "name": "tryAddLock",
                "in_type": "disaggregated.TryAddLockRequest",
                "out_type": "disaggregated.TryAddLockResponse"
              },
              {
                "name": "tryMarkDelete",
                "in_type": "disaggregated.TryMarkDeleteRequest",
                "out_type": "disaggregated.TryMarkDeleteResponse"
              },
              {
                "name": "EstablishDisaggTask",
                "in_type": "disaggregated.EstablishDisaggTaskRequest",
                "out_type": "disaggregated.EstablishDisaggTaskResponse"
              },
              {
                "name": "FetchDisaggPages",
                "in_type": "disaggregated.FetchDisaggPagesRequest",
                "out_type": "disaggregated.PagesPacket",
                "out_streamed": true
              },
              {
                "name": "GetDisaggConfig",
                "in_type": "disaggregated.GetDisaggConfigRequest",
                "out_type": "disaggregated.GetDisaggConfigResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "coprocessor.proto"
          },
          {
            "path": "kvrpcpb.proto"
          },
          {
            "path": "mpp.proto"
          },
          {
            "path": "raft_serverpb.proto"
          },
          {
            "path": "disaggregated.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "tikvpb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "tracepb.proto",
      "def": {
        "messages": [
          {
            "name": "TraceRecordRequest"
          },
          {
            "name": "TraceRecord",
            "fields": [
              {
                "id": 1,
                "name": "report",
                "type": "Report"
              },
              {
                "id": 2,
                "name": "notify_collect",
                "type": "NotifyCollect"
              }
            ]
          },
          {
            "name": "RemoteParentSpan",
            "fields": [
              {
                "id": 1,
                "name": "trace_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "span_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "TraceContext",
            "fields": [
              {
                "id": 1,
                "name": "remote_parent_spans",
                "type": "RemoteParentSpan",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "duration_threshold_ms",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "Report",
            "fields": [
              {
                "id": 1,
                "name": "remote_parent_spans",
                "type": "RemoteParentSpan",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "spans",
                "type": "Span",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NotifyCollect",
            "fields": [
              {
                "id": 1,
                "name": "trace_id",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Span",
            "fields": [
              {
                "id": 1,
                "name": "span_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "begin_unix_ns",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "duration_ns",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "event",
                "type": "string"
              },
              {
                "id": 6,
                "name": "properties",
                "type": "Property",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Property",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TraceRecordPubSub",
            "rpcs": [
              {
                "name": "Subscribe",
                "in_type": "TraceRecordRequest",
                "out_type": "TraceRecord",
                "out_streamed": true
              }
            ]
          }
        ],
        "package": {
          "name": "tracepb"
        },
        "options": [
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    },
    {
      "protopath": "tsopb.proto",
      "def": {
        "enums": [
          {
            "name": "ErrorType",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "UNKNOWN",
                "integer": 1
              },
              {
                "name": "NOT_BOOTSTRAPPED",
                "integer": 2
              },
              {
                "name": "ALREADY_BOOTSTRAPPED",
                "integer": 3
              },
              {
                "name": "INVALID_VALUE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "sender_id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "keyspace_id",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "keyspace_group_id",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "ResponseHeader",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "error",
                "type": "Error"
              },
              {
                "id": 3,
                "name": "keyspace_id",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "keyspace_group_id",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "Error",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ErrorType"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "TsoRequest",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "RequestHeader"
              },
              {
                "id": 2,
                "name": "count",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "dc_location",
                "type": "string"
              }
            ]
          },
          {
            "name": "TsoResponse",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "ResponseHeader"
              },
              {
                "id": 2,
                "name": "count",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "pdpb.Timestamp"
              }
            ]
          },
          {
            "name": "Participant",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "uint64"
              },
              {
                "id": 3,
                "name": "listen_urls",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TSO",
            "rpcs": [
              {
                "name": "Tso",
                "in_type": "TsoRequest",
                "out_type": "TsoResponse",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "pdpb.proto"
          },
          {
            "path": "gogoproto/gogo.proto"
          },
          {
            "path": "rustproto.proto"
          }
        ],
        "package": {
          "name": "tsopb"
        },
        "options": [
          {
            "name": "(gogoproto.sizer_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.marshaler_all)",
            "value": "true"
          },
          {
            "name": "(gogoproto.unmarshaler_all)",
            "value": "true"
          },
          {
            "name": "(rustproto.lite_runtime_all)",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "org.tikv.kvproto"
          }
        ]
      }
    }
  ]
}